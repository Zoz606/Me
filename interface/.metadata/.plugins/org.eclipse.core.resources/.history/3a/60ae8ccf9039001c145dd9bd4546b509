
EEPROM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f12  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000ce4  00000000  00000000  00000f68  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000008e1  00000000  00000000  00001c4c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 7d 07 	call	0xefa	; 0xefa <main>
  64:	0c 94 87 07 	jmp	0xf0e	; 0xf0e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_vSetPinDir>:
#include <avr/io.h>
#include "std_macros.h"
//pin level
void DIO_vSetPinDir (unsigned char port, unsigned char pin, unsigned char dir) {
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_vSetPinDir+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_vSetPinDir+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	89 83       	std	Y+1, r24	; 0x01
  7c:	6a 83       	std	Y+2, r22	; 0x02
  7e:	4b 83       	std	Y+3, r20	; 0x03
	switch (port) {
  80:	89 81       	ldd	r24, Y+1	; 0x01
  82:	28 2f       	mov	r18, r24
  84:	30 e0       	ldi	r19, 0x00	; 0
  86:	3d 83       	std	Y+5, r19	; 0x05
  88:	2c 83       	std	Y+4, r18	; 0x04
  8a:	8c 81       	ldd	r24, Y+4	; 0x04
  8c:	9d 81       	ldd	r25, Y+5	; 0x05
  8e:	84 34       	cpi	r24, 0x44	; 68
  90:	91 05       	cpc	r25, r1
  92:	09 f4       	brne	.+2      	; 0x96 <DIO_vSetPinDir+0x2a>
  94:	b9 c0       	rjmp	.+370    	; 0x208 <DIO_vSetPinDir+0x19c>
  96:	2c 81       	ldd	r18, Y+4	; 0x04
  98:	3d 81       	ldd	r19, Y+5	; 0x05
  9a:	25 34       	cpi	r18, 0x45	; 69
  9c:	31 05       	cpc	r19, r1
  9e:	94 f4       	brge	.+36     	; 0xc4 <DIO_vSetPinDir+0x58>
  a0:	8c 81       	ldd	r24, Y+4	; 0x04
  a2:	9d 81       	ldd	r25, Y+5	; 0x05
  a4:	82 34       	cpi	r24, 0x42	; 66
  a6:	91 05       	cpc	r25, r1
  a8:	09 f4       	brne	.+2      	; 0xac <DIO_vSetPinDir+0x40>
  aa:	56 c0       	rjmp	.+172    	; 0x158 <DIO_vSetPinDir+0xec>
  ac:	2c 81       	ldd	r18, Y+4	; 0x04
  ae:	3d 81       	ldd	r19, Y+5	; 0x05
  b0:	23 34       	cpi	r18, 0x43	; 67
  b2:	31 05       	cpc	r19, r1
  b4:	0c f0       	brlt	.+2      	; 0xb8 <DIO_vSetPinDir+0x4c>
  b6:	7c c0       	rjmp	.+248    	; 0x1b0 <DIO_vSetPinDir+0x144>
  b8:	8c 81       	ldd	r24, Y+4	; 0x04
  ba:	9d 81       	ldd	r25, Y+5	; 0x05
  bc:	81 34       	cpi	r24, 0x41	; 65
  be:	91 05       	cpc	r25, r1
  c0:	f9 f0       	breq	.+62     	; 0x100 <DIO_vSetPinDir+0x94>
  c2:	cd c0       	rjmp	.+410    	; 0x25e <DIO_vSetPinDir+0x1f2>
  c4:	2c 81       	ldd	r18, Y+4	; 0x04
  c6:	3d 81       	ldd	r19, Y+5	; 0x05
  c8:	22 36       	cpi	r18, 0x62	; 98
  ca:	31 05       	cpc	r19, r1
  cc:	09 f4       	brne	.+2      	; 0xd0 <DIO_vSetPinDir+0x64>
  ce:	44 c0       	rjmp	.+136    	; 0x158 <DIO_vSetPinDir+0xec>
  d0:	8c 81       	ldd	r24, Y+4	; 0x04
  d2:	9d 81       	ldd	r25, Y+5	; 0x05
  d4:	83 36       	cpi	r24, 0x63	; 99
  d6:	91 05       	cpc	r25, r1
  d8:	34 f4       	brge	.+12     	; 0xe6 <DIO_vSetPinDir+0x7a>
  da:	2c 81       	ldd	r18, Y+4	; 0x04
  dc:	3d 81       	ldd	r19, Y+5	; 0x05
  de:	21 36       	cpi	r18, 0x61	; 97
  e0:	31 05       	cpc	r19, r1
  e2:	71 f0       	breq	.+28     	; 0x100 <DIO_vSetPinDir+0x94>
  e4:	bc c0       	rjmp	.+376    	; 0x25e <DIO_vSetPinDir+0x1f2>
  e6:	8c 81       	ldd	r24, Y+4	; 0x04
  e8:	9d 81       	ldd	r25, Y+5	; 0x05
  ea:	83 36       	cpi	r24, 0x63	; 99
  ec:	91 05       	cpc	r25, r1
  ee:	09 f4       	brne	.+2      	; 0xf2 <DIO_vSetPinDir+0x86>
  f0:	5f c0       	rjmp	.+190    	; 0x1b0 <DIO_vSetPinDir+0x144>
  f2:	2c 81       	ldd	r18, Y+4	; 0x04
  f4:	3d 81       	ldd	r19, Y+5	; 0x05
  f6:	24 36       	cpi	r18, 0x64	; 100
  f8:	31 05       	cpc	r19, r1
  fa:	09 f4       	brne	.+2      	; 0xfe <DIO_vSetPinDir+0x92>
  fc:	85 c0       	rjmp	.+266    	; 0x208 <DIO_vSetPinDir+0x19c>
  fe:	af c0       	rjmp	.+350    	; 0x25e <DIO_vSetPinDir+0x1f2>
	case 'A':
	case 'a':
		if (dir == 1) {
 100:	8b 81       	ldd	r24, Y+3	; 0x03
 102:	81 30       	cpi	r24, 0x01	; 1
 104:	a1 f4       	brne	.+40     	; 0x12e <DIO_vSetPinDir+0xc2>
			SET_BIT(DDRA, pin);
 106:	aa e3       	ldi	r26, 0x3A	; 58
 108:	b0 e0       	ldi	r27, 0x00	; 0
 10a:	ea e3       	ldi	r30, 0x3A	; 58
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	80 81       	ld	r24, Z
 110:	48 2f       	mov	r20, r24
 112:	8a 81       	ldd	r24, Y+2	; 0x02
 114:	28 2f       	mov	r18, r24
 116:	30 e0       	ldi	r19, 0x00	; 0
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	02 2e       	mov	r0, r18
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_vSetPinDir+0xb8>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	0a 94       	dec	r0
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_vSetPinDir+0xb4>
 128:	84 2b       	or	r24, r20
 12a:	8c 93       	st	X, r24
 12c:	98 c0       	rjmp	.+304    	; 0x25e <DIO_vSetPinDir+0x1f2>
		} else {
			CLR_BIT(DDRA, pin);
 12e:	aa e3       	ldi	r26, 0x3A	; 58
 130:	b0 e0       	ldi	r27, 0x00	; 0
 132:	ea e3       	ldi	r30, 0x3A	; 58
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 81       	ld	r24, Z
 138:	48 2f       	mov	r20, r24
 13a:	8a 81       	ldd	r24, Y+2	; 0x02
 13c:	28 2f       	mov	r18, r24
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	02 2e       	mov	r0, r18
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_vSetPinDir+0xe0>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	0a 94       	dec	r0
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_vSetPinDir+0xdc>
 150:	80 95       	com	r24
 152:	84 23       	and	r24, r20
 154:	8c 93       	st	X, r24
 156:	83 c0       	rjmp	.+262    	; 0x25e <DIO_vSetPinDir+0x1f2>
		}
		break;

	case 'B':
	case 'b':
		if (dir == 1) {
 158:	8b 81       	ldd	r24, Y+3	; 0x03
 15a:	81 30       	cpi	r24, 0x01	; 1
 15c:	a1 f4       	brne	.+40     	; 0x186 <DIO_vSetPinDir+0x11a>
			SET_BIT(DDRB, pin);
 15e:	a7 e3       	ldi	r26, 0x37	; 55
 160:	b0 e0       	ldi	r27, 0x00	; 0
 162:	e7 e3       	ldi	r30, 0x37	; 55
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	48 2f       	mov	r20, r24
 16a:	8a 81       	ldd	r24, Y+2	; 0x02
 16c:	28 2f       	mov	r18, r24
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	02 2e       	mov	r0, r18
 176:	02 c0       	rjmp	.+4      	; 0x17c <DIO_vSetPinDir+0x110>
 178:	88 0f       	add	r24, r24
 17a:	99 1f       	adc	r25, r25
 17c:	0a 94       	dec	r0
 17e:	e2 f7       	brpl	.-8      	; 0x178 <DIO_vSetPinDir+0x10c>
 180:	84 2b       	or	r24, r20
 182:	8c 93       	st	X, r24
 184:	6c c0       	rjmp	.+216    	; 0x25e <DIO_vSetPinDir+0x1f2>
		} else {
			CLR_BIT(DDRB, pin);
 186:	a7 e3       	ldi	r26, 0x37	; 55
 188:	b0 e0       	ldi	r27, 0x00	; 0
 18a:	e7 e3       	ldi	r30, 0x37	; 55
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	48 2f       	mov	r20, r24
 192:	8a 81       	ldd	r24, Y+2	; 0x02
 194:	28 2f       	mov	r18, r24
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	02 2e       	mov	r0, r18
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_vSetPinDir+0x138>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	0a 94       	dec	r0
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_vSetPinDir+0x134>
 1a8:	80 95       	com	r24
 1aa:	84 23       	and	r24, r20
 1ac:	8c 93       	st	X, r24
 1ae:	57 c0       	rjmp	.+174    	; 0x25e <DIO_vSetPinDir+0x1f2>
		}
		break;

	case 'C':
	case 'c':
		if (dir == 1) {
 1b0:	8b 81       	ldd	r24, Y+3	; 0x03
 1b2:	81 30       	cpi	r24, 0x01	; 1
 1b4:	a1 f4       	brne	.+40     	; 0x1de <DIO_vSetPinDir+0x172>
			SET_BIT(DDRC, pin);
 1b6:	a4 e3       	ldi	r26, 0x34	; 52
 1b8:	b0 e0       	ldi	r27, 0x00	; 0
 1ba:	e4 e3       	ldi	r30, 0x34	; 52
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	48 2f       	mov	r20, r24
 1c2:	8a 81       	ldd	r24, Y+2	; 0x02
 1c4:	28 2f       	mov	r18, r24
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 2e       	mov	r0, r18
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <DIO_vSetPinDir+0x168>
 1d0:	88 0f       	add	r24, r24
 1d2:	99 1f       	adc	r25, r25
 1d4:	0a 94       	dec	r0
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <DIO_vSetPinDir+0x164>
 1d8:	84 2b       	or	r24, r20
 1da:	8c 93       	st	X, r24
 1dc:	40 c0       	rjmp	.+128    	; 0x25e <DIO_vSetPinDir+0x1f2>
		} else {
			CLR_BIT(DDRC, pin);
 1de:	a4 e3       	ldi	r26, 0x34	; 52
 1e0:	b0 e0       	ldi	r27, 0x00	; 0
 1e2:	e4 e3       	ldi	r30, 0x34	; 52
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	80 81       	ld	r24, Z
 1e8:	48 2f       	mov	r20, r24
 1ea:	8a 81       	ldd	r24, Y+2	; 0x02
 1ec:	28 2f       	mov	r18, r24
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	02 2e       	mov	r0, r18
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <DIO_vSetPinDir+0x190>
 1f8:	88 0f       	add	r24, r24
 1fa:	99 1f       	adc	r25, r25
 1fc:	0a 94       	dec	r0
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <DIO_vSetPinDir+0x18c>
 200:	80 95       	com	r24
 202:	84 23       	and	r24, r20
 204:	8c 93       	st	X, r24
 206:	2b c0       	rjmp	.+86     	; 0x25e <DIO_vSetPinDir+0x1f2>
		}
		break;

	case 'D':
	case 'd':
		if (dir == 1) {
 208:	8b 81       	ldd	r24, Y+3	; 0x03
 20a:	81 30       	cpi	r24, 0x01	; 1
 20c:	a1 f4       	brne	.+40     	; 0x236 <DIO_vSetPinDir+0x1ca>
			SET_BIT(DDRD, pin);
 20e:	a1 e3       	ldi	r26, 0x31	; 49
 210:	b0 e0       	ldi	r27, 0x00	; 0
 212:	e1 e3       	ldi	r30, 0x31	; 49
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	80 81       	ld	r24, Z
 218:	48 2f       	mov	r20, r24
 21a:	8a 81       	ldd	r24, Y+2	; 0x02
 21c:	28 2f       	mov	r18, r24
 21e:	30 e0       	ldi	r19, 0x00	; 0
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	02 2e       	mov	r0, r18
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_vSetPinDir+0x1c0>
 228:	88 0f       	add	r24, r24
 22a:	99 1f       	adc	r25, r25
 22c:	0a 94       	dec	r0
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_vSetPinDir+0x1bc>
 230:	84 2b       	or	r24, r20
 232:	8c 93       	st	X, r24
 234:	14 c0       	rjmp	.+40     	; 0x25e <DIO_vSetPinDir+0x1f2>
		} else {
			CLR_BIT(DDRD, pin);
 236:	a1 e3       	ldi	r26, 0x31	; 49
 238:	b0 e0       	ldi	r27, 0x00	; 0
 23a:	e1 e3       	ldi	r30, 0x31	; 49
 23c:	f0 e0       	ldi	r31, 0x00	; 0
 23e:	80 81       	ld	r24, Z
 240:	48 2f       	mov	r20, r24
 242:	8a 81       	ldd	r24, Y+2	; 0x02
 244:	28 2f       	mov	r18, r24
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	02 2e       	mov	r0, r18
 24e:	02 c0       	rjmp	.+4      	; 0x254 <DIO_vSetPinDir+0x1e8>
 250:	88 0f       	add	r24, r24
 252:	99 1f       	adc	r25, r25
 254:	0a 94       	dec	r0
 256:	e2 f7       	brpl	.-8      	; 0x250 <DIO_vSetPinDir+0x1e4>
 258:	80 95       	com	r24
 25a:	84 23       	and	r24, r20
 25c:	8c 93       	st	X, r24
		}
		break;
	}
}
 25e:	0f 90       	pop	r0
 260:	0f 90       	pop	r0
 262:	0f 90       	pop	r0
 264:	0f 90       	pop	r0
 266:	0f 90       	pop	r0
 268:	cf 91       	pop	r28
 26a:	df 91       	pop	r29
 26c:	08 95       	ret

0000026e <DIO_vWritePin>:

void DIO_vWritePin (unsigned char port, unsigned char pin, unsigned char value) {
 26e:	df 93       	push	r29
 270:	cf 93       	push	r28
 272:	00 d0       	rcall	.+0      	; 0x274 <DIO_vWritePin+0x6>
 274:	00 d0       	rcall	.+0      	; 0x276 <DIO_vWritePin+0x8>
 276:	0f 92       	push	r0
 278:	cd b7       	in	r28, 0x3d	; 61
 27a:	de b7       	in	r29, 0x3e	; 62
 27c:	89 83       	std	Y+1, r24	; 0x01
 27e:	6a 83       	std	Y+2, r22	; 0x02
 280:	4b 83       	std	Y+3, r20	; 0x03
	switch (port) {
 282:	89 81       	ldd	r24, Y+1	; 0x01
 284:	28 2f       	mov	r18, r24
 286:	30 e0       	ldi	r19, 0x00	; 0
 288:	3d 83       	std	Y+5, r19	; 0x05
 28a:	2c 83       	std	Y+4, r18	; 0x04
 28c:	8c 81       	ldd	r24, Y+4	; 0x04
 28e:	9d 81       	ldd	r25, Y+5	; 0x05
 290:	84 34       	cpi	r24, 0x44	; 68
 292:	91 05       	cpc	r25, r1
 294:	09 f4       	brne	.+2      	; 0x298 <DIO_vWritePin+0x2a>
 296:	b9 c0       	rjmp	.+370    	; 0x40a <DIO_vWritePin+0x19c>
 298:	2c 81       	ldd	r18, Y+4	; 0x04
 29a:	3d 81       	ldd	r19, Y+5	; 0x05
 29c:	25 34       	cpi	r18, 0x45	; 69
 29e:	31 05       	cpc	r19, r1
 2a0:	94 f4       	brge	.+36     	; 0x2c6 <DIO_vWritePin+0x58>
 2a2:	8c 81       	ldd	r24, Y+4	; 0x04
 2a4:	9d 81       	ldd	r25, Y+5	; 0x05
 2a6:	82 34       	cpi	r24, 0x42	; 66
 2a8:	91 05       	cpc	r25, r1
 2aa:	09 f4       	brne	.+2      	; 0x2ae <DIO_vWritePin+0x40>
 2ac:	56 c0       	rjmp	.+172    	; 0x35a <DIO_vWritePin+0xec>
 2ae:	2c 81       	ldd	r18, Y+4	; 0x04
 2b0:	3d 81       	ldd	r19, Y+5	; 0x05
 2b2:	23 34       	cpi	r18, 0x43	; 67
 2b4:	31 05       	cpc	r19, r1
 2b6:	0c f0       	brlt	.+2      	; 0x2ba <DIO_vWritePin+0x4c>
 2b8:	7c c0       	rjmp	.+248    	; 0x3b2 <DIO_vWritePin+0x144>
 2ba:	8c 81       	ldd	r24, Y+4	; 0x04
 2bc:	9d 81       	ldd	r25, Y+5	; 0x05
 2be:	81 34       	cpi	r24, 0x41	; 65
 2c0:	91 05       	cpc	r25, r1
 2c2:	f9 f0       	breq	.+62     	; 0x302 <DIO_vWritePin+0x94>
 2c4:	cd c0       	rjmp	.+410    	; 0x460 <DIO_vWritePin+0x1f2>
 2c6:	2c 81       	ldd	r18, Y+4	; 0x04
 2c8:	3d 81       	ldd	r19, Y+5	; 0x05
 2ca:	22 36       	cpi	r18, 0x62	; 98
 2cc:	31 05       	cpc	r19, r1
 2ce:	09 f4       	brne	.+2      	; 0x2d2 <DIO_vWritePin+0x64>
 2d0:	44 c0       	rjmp	.+136    	; 0x35a <DIO_vWritePin+0xec>
 2d2:	8c 81       	ldd	r24, Y+4	; 0x04
 2d4:	9d 81       	ldd	r25, Y+5	; 0x05
 2d6:	83 36       	cpi	r24, 0x63	; 99
 2d8:	91 05       	cpc	r25, r1
 2da:	34 f4       	brge	.+12     	; 0x2e8 <DIO_vWritePin+0x7a>
 2dc:	2c 81       	ldd	r18, Y+4	; 0x04
 2de:	3d 81       	ldd	r19, Y+5	; 0x05
 2e0:	21 36       	cpi	r18, 0x61	; 97
 2e2:	31 05       	cpc	r19, r1
 2e4:	71 f0       	breq	.+28     	; 0x302 <DIO_vWritePin+0x94>
 2e6:	bc c0       	rjmp	.+376    	; 0x460 <DIO_vWritePin+0x1f2>
 2e8:	8c 81       	ldd	r24, Y+4	; 0x04
 2ea:	9d 81       	ldd	r25, Y+5	; 0x05
 2ec:	83 36       	cpi	r24, 0x63	; 99
 2ee:	91 05       	cpc	r25, r1
 2f0:	09 f4       	brne	.+2      	; 0x2f4 <DIO_vWritePin+0x86>
 2f2:	5f c0       	rjmp	.+190    	; 0x3b2 <DIO_vWritePin+0x144>
 2f4:	2c 81       	ldd	r18, Y+4	; 0x04
 2f6:	3d 81       	ldd	r19, Y+5	; 0x05
 2f8:	24 36       	cpi	r18, 0x64	; 100
 2fa:	31 05       	cpc	r19, r1
 2fc:	09 f4       	brne	.+2      	; 0x300 <DIO_vWritePin+0x92>
 2fe:	85 c0       	rjmp	.+266    	; 0x40a <DIO_vWritePin+0x19c>
 300:	af c0       	rjmp	.+350    	; 0x460 <DIO_vWritePin+0x1f2>
	case 'A':
	case 'a':
		if (value == 1) {
 302:	8b 81       	ldd	r24, Y+3	; 0x03
 304:	81 30       	cpi	r24, 0x01	; 1
 306:	a1 f4       	brne	.+40     	; 0x330 <DIO_vWritePin+0xc2>
			SET_BIT(PORTA, pin);
 308:	ab e3       	ldi	r26, 0x3B	; 59
 30a:	b0 e0       	ldi	r27, 0x00	; 0
 30c:	eb e3       	ldi	r30, 0x3B	; 59
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	80 81       	ld	r24, Z
 312:	48 2f       	mov	r20, r24
 314:	8a 81       	ldd	r24, Y+2	; 0x02
 316:	28 2f       	mov	r18, r24
 318:	30 e0       	ldi	r19, 0x00	; 0
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	02 2e       	mov	r0, r18
 320:	02 c0       	rjmp	.+4      	; 0x326 <DIO_vWritePin+0xb8>
 322:	88 0f       	add	r24, r24
 324:	99 1f       	adc	r25, r25
 326:	0a 94       	dec	r0
 328:	e2 f7       	brpl	.-8      	; 0x322 <DIO_vWritePin+0xb4>
 32a:	84 2b       	or	r24, r20
 32c:	8c 93       	st	X, r24
 32e:	98 c0       	rjmp	.+304    	; 0x460 <DIO_vWritePin+0x1f2>
		} else {
			CLR_BIT(PORTA, pin);
 330:	ab e3       	ldi	r26, 0x3B	; 59
 332:	b0 e0       	ldi	r27, 0x00	; 0
 334:	eb e3       	ldi	r30, 0x3B	; 59
 336:	f0 e0       	ldi	r31, 0x00	; 0
 338:	80 81       	ld	r24, Z
 33a:	48 2f       	mov	r20, r24
 33c:	8a 81       	ldd	r24, Y+2	; 0x02
 33e:	28 2f       	mov	r18, r24
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	02 2e       	mov	r0, r18
 348:	02 c0       	rjmp	.+4      	; 0x34e <DIO_vWritePin+0xe0>
 34a:	88 0f       	add	r24, r24
 34c:	99 1f       	adc	r25, r25
 34e:	0a 94       	dec	r0
 350:	e2 f7       	brpl	.-8      	; 0x34a <DIO_vWritePin+0xdc>
 352:	80 95       	com	r24
 354:	84 23       	and	r24, r20
 356:	8c 93       	st	X, r24
 358:	83 c0       	rjmp	.+262    	; 0x460 <DIO_vWritePin+0x1f2>
		}
		break;

	case 'B':
	case 'b':
		if (value == 1) {
 35a:	8b 81       	ldd	r24, Y+3	; 0x03
 35c:	81 30       	cpi	r24, 0x01	; 1
 35e:	a1 f4       	brne	.+40     	; 0x388 <DIO_vWritePin+0x11a>
			SET_BIT(PORTB, pin);
 360:	a8 e3       	ldi	r26, 0x38	; 56
 362:	b0 e0       	ldi	r27, 0x00	; 0
 364:	e8 e3       	ldi	r30, 0x38	; 56
 366:	f0 e0       	ldi	r31, 0x00	; 0
 368:	80 81       	ld	r24, Z
 36a:	48 2f       	mov	r20, r24
 36c:	8a 81       	ldd	r24, Y+2	; 0x02
 36e:	28 2f       	mov	r18, r24
 370:	30 e0       	ldi	r19, 0x00	; 0
 372:	81 e0       	ldi	r24, 0x01	; 1
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	02 2e       	mov	r0, r18
 378:	02 c0       	rjmp	.+4      	; 0x37e <DIO_vWritePin+0x110>
 37a:	88 0f       	add	r24, r24
 37c:	99 1f       	adc	r25, r25
 37e:	0a 94       	dec	r0
 380:	e2 f7       	brpl	.-8      	; 0x37a <DIO_vWritePin+0x10c>
 382:	84 2b       	or	r24, r20
 384:	8c 93       	st	X, r24
 386:	6c c0       	rjmp	.+216    	; 0x460 <DIO_vWritePin+0x1f2>
		} else {
			CLR_BIT(PORTB, pin);
 388:	a8 e3       	ldi	r26, 0x38	; 56
 38a:	b0 e0       	ldi	r27, 0x00	; 0
 38c:	e8 e3       	ldi	r30, 0x38	; 56
 38e:	f0 e0       	ldi	r31, 0x00	; 0
 390:	80 81       	ld	r24, Z
 392:	48 2f       	mov	r20, r24
 394:	8a 81       	ldd	r24, Y+2	; 0x02
 396:	28 2f       	mov	r18, r24
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	81 e0       	ldi	r24, 0x01	; 1
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	02 2e       	mov	r0, r18
 3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <DIO_vWritePin+0x138>
 3a2:	88 0f       	add	r24, r24
 3a4:	99 1f       	adc	r25, r25
 3a6:	0a 94       	dec	r0
 3a8:	e2 f7       	brpl	.-8      	; 0x3a2 <DIO_vWritePin+0x134>
 3aa:	80 95       	com	r24
 3ac:	84 23       	and	r24, r20
 3ae:	8c 93       	st	X, r24
 3b0:	57 c0       	rjmp	.+174    	; 0x460 <DIO_vWritePin+0x1f2>
		}
		break;

	case 'C':
	case 'c':
		if (value == 1) {
 3b2:	8b 81       	ldd	r24, Y+3	; 0x03
 3b4:	81 30       	cpi	r24, 0x01	; 1
 3b6:	a1 f4       	brne	.+40     	; 0x3e0 <DIO_vWritePin+0x172>
			SET_BIT(PORTC, pin);
 3b8:	a5 e3       	ldi	r26, 0x35	; 53
 3ba:	b0 e0       	ldi	r27, 0x00	; 0
 3bc:	e5 e3       	ldi	r30, 0x35	; 53
 3be:	f0 e0       	ldi	r31, 0x00	; 0
 3c0:	80 81       	ld	r24, Z
 3c2:	48 2f       	mov	r20, r24
 3c4:	8a 81       	ldd	r24, Y+2	; 0x02
 3c6:	28 2f       	mov	r18, r24
 3c8:	30 e0       	ldi	r19, 0x00	; 0
 3ca:	81 e0       	ldi	r24, 0x01	; 1
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	02 2e       	mov	r0, r18
 3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <DIO_vWritePin+0x168>
 3d2:	88 0f       	add	r24, r24
 3d4:	99 1f       	adc	r25, r25
 3d6:	0a 94       	dec	r0
 3d8:	e2 f7       	brpl	.-8      	; 0x3d2 <DIO_vWritePin+0x164>
 3da:	84 2b       	or	r24, r20
 3dc:	8c 93       	st	X, r24
 3de:	40 c0       	rjmp	.+128    	; 0x460 <DIO_vWritePin+0x1f2>
		} else {
			CLR_BIT(PORTC, pin);
 3e0:	a5 e3       	ldi	r26, 0x35	; 53
 3e2:	b0 e0       	ldi	r27, 0x00	; 0
 3e4:	e5 e3       	ldi	r30, 0x35	; 53
 3e6:	f0 e0       	ldi	r31, 0x00	; 0
 3e8:	80 81       	ld	r24, Z
 3ea:	48 2f       	mov	r20, r24
 3ec:	8a 81       	ldd	r24, Y+2	; 0x02
 3ee:	28 2f       	mov	r18, r24
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	02 2e       	mov	r0, r18
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <DIO_vWritePin+0x190>
 3fa:	88 0f       	add	r24, r24
 3fc:	99 1f       	adc	r25, r25
 3fe:	0a 94       	dec	r0
 400:	e2 f7       	brpl	.-8      	; 0x3fa <DIO_vWritePin+0x18c>
 402:	80 95       	com	r24
 404:	84 23       	and	r24, r20
 406:	8c 93       	st	X, r24
 408:	2b c0       	rjmp	.+86     	; 0x460 <DIO_vWritePin+0x1f2>
		}
		break;

	case 'D':
	case 'd':
		if (value == 1) {
 40a:	8b 81       	ldd	r24, Y+3	; 0x03
 40c:	81 30       	cpi	r24, 0x01	; 1
 40e:	a1 f4       	brne	.+40     	; 0x438 <DIO_vWritePin+0x1ca>
			SET_BIT(PORTD, pin);
 410:	a2 e3       	ldi	r26, 0x32	; 50
 412:	b0 e0       	ldi	r27, 0x00	; 0
 414:	e2 e3       	ldi	r30, 0x32	; 50
 416:	f0 e0       	ldi	r31, 0x00	; 0
 418:	80 81       	ld	r24, Z
 41a:	48 2f       	mov	r20, r24
 41c:	8a 81       	ldd	r24, Y+2	; 0x02
 41e:	28 2f       	mov	r18, r24
 420:	30 e0       	ldi	r19, 0x00	; 0
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	02 2e       	mov	r0, r18
 428:	02 c0       	rjmp	.+4      	; 0x42e <DIO_vWritePin+0x1c0>
 42a:	88 0f       	add	r24, r24
 42c:	99 1f       	adc	r25, r25
 42e:	0a 94       	dec	r0
 430:	e2 f7       	brpl	.-8      	; 0x42a <DIO_vWritePin+0x1bc>
 432:	84 2b       	or	r24, r20
 434:	8c 93       	st	X, r24
 436:	14 c0       	rjmp	.+40     	; 0x460 <DIO_vWritePin+0x1f2>
		} else {
			CLR_BIT(PORTD, pin);
 438:	a2 e3       	ldi	r26, 0x32	; 50
 43a:	b0 e0       	ldi	r27, 0x00	; 0
 43c:	e2 e3       	ldi	r30, 0x32	; 50
 43e:	f0 e0       	ldi	r31, 0x00	; 0
 440:	80 81       	ld	r24, Z
 442:	48 2f       	mov	r20, r24
 444:	8a 81       	ldd	r24, Y+2	; 0x02
 446:	28 2f       	mov	r18, r24
 448:	30 e0       	ldi	r19, 0x00	; 0
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	02 2e       	mov	r0, r18
 450:	02 c0       	rjmp	.+4      	; 0x456 <DIO_vWritePin+0x1e8>
 452:	88 0f       	add	r24, r24
 454:	99 1f       	adc	r25, r25
 456:	0a 94       	dec	r0
 458:	e2 f7       	brpl	.-8      	; 0x452 <DIO_vWritePin+0x1e4>
 45a:	80 95       	com	r24
 45c:	84 23       	and	r24, r20
 45e:	8c 93       	st	X, r24
		}
		break;
	}
}
 460:	0f 90       	pop	r0
 462:	0f 90       	pop	r0
 464:	0f 90       	pop	r0
 466:	0f 90       	pop	r0
 468:	0f 90       	pop	r0
 46a:	cf 91       	pop	r28
 46c:	df 91       	pop	r29
 46e:	08 95       	ret

00000470 <DIO_vTogglePin>:

void DIO_vTogglePin (unsigned char port, unsigned char pin) {
 470:	df 93       	push	r29
 472:	cf 93       	push	r28
 474:	00 d0       	rcall	.+0      	; 0x476 <DIO_vTogglePin+0x6>
 476:	00 d0       	rcall	.+0      	; 0x478 <DIO_vTogglePin+0x8>
 478:	cd b7       	in	r28, 0x3d	; 61
 47a:	de b7       	in	r29, 0x3e	; 62
 47c:	89 83       	std	Y+1, r24	; 0x01
 47e:	6a 83       	std	Y+2, r22	; 0x02
	switch (port) {
 480:	89 81       	ldd	r24, Y+1	; 0x01
 482:	28 2f       	mov	r18, r24
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	3c 83       	std	Y+4, r19	; 0x04
 488:	2b 83       	std	Y+3, r18	; 0x03
 48a:	8b 81       	ldd	r24, Y+3	; 0x03
 48c:	9c 81       	ldd	r25, Y+4	; 0x04
 48e:	84 34       	cpi	r24, 0x44	; 68
 490:	91 05       	cpc	r25, r1
 492:	09 f4       	brne	.+2      	; 0x496 <DIO_vTogglePin+0x26>
 494:	6d c0       	rjmp	.+218    	; 0x570 <DIO_vTogglePin+0x100>
 496:	2b 81       	ldd	r18, Y+3	; 0x03
 498:	3c 81       	ldd	r19, Y+4	; 0x04
 49a:	25 34       	cpi	r18, 0x45	; 69
 49c:	31 05       	cpc	r19, r1
 49e:	8c f4       	brge	.+34     	; 0x4c2 <DIO_vTogglePin+0x52>
 4a0:	8b 81       	ldd	r24, Y+3	; 0x03
 4a2:	9c 81       	ldd	r25, Y+4	; 0x04
 4a4:	82 34       	cpi	r24, 0x42	; 66
 4a6:	91 05       	cpc	r25, r1
 4a8:	d9 f1       	breq	.+118    	; 0x520 <DIO_vTogglePin+0xb0>
 4aa:	2b 81       	ldd	r18, Y+3	; 0x03
 4ac:	3c 81       	ldd	r19, Y+4	; 0x04
 4ae:	23 34       	cpi	r18, 0x43	; 67
 4b0:	31 05       	cpc	r19, r1
 4b2:	0c f0       	brlt	.+2      	; 0x4b6 <DIO_vTogglePin+0x46>
 4b4:	49 c0       	rjmp	.+146    	; 0x548 <DIO_vTogglePin+0xd8>
 4b6:	8b 81       	ldd	r24, Y+3	; 0x03
 4b8:	9c 81       	ldd	r25, Y+4	; 0x04
 4ba:	81 34       	cpi	r24, 0x41	; 65
 4bc:	91 05       	cpc	r25, r1
 4be:	e1 f0       	breq	.+56     	; 0x4f8 <DIO_vTogglePin+0x88>
 4c0:	6a c0       	rjmp	.+212    	; 0x596 <DIO_vTogglePin+0x126>
 4c2:	2b 81       	ldd	r18, Y+3	; 0x03
 4c4:	3c 81       	ldd	r19, Y+4	; 0x04
 4c6:	22 36       	cpi	r18, 0x62	; 98
 4c8:	31 05       	cpc	r19, r1
 4ca:	51 f1       	breq	.+84     	; 0x520 <DIO_vTogglePin+0xb0>
 4cc:	8b 81       	ldd	r24, Y+3	; 0x03
 4ce:	9c 81       	ldd	r25, Y+4	; 0x04
 4d0:	83 36       	cpi	r24, 0x63	; 99
 4d2:	91 05       	cpc	r25, r1
 4d4:	34 f4       	brge	.+12     	; 0x4e2 <DIO_vTogglePin+0x72>
 4d6:	2b 81       	ldd	r18, Y+3	; 0x03
 4d8:	3c 81       	ldd	r19, Y+4	; 0x04
 4da:	21 36       	cpi	r18, 0x61	; 97
 4dc:	31 05       	cpc	r19, r1
 4de:	61 f0       	breq	.+24     	; 0x4f8 <DIO_vTogglePin+0x88>
 4e0:	5a c0       	rjmp	.+180    	; 0x596 <DIO_vTogglePin+0x126>
 4e2:	8b 81       	ldd	r24, Y+3	; 0x03
 4e4:	9c 81       	ldd	r25, Y+4	; 0x04
 4e6:	83 36       	cpi	r24, 0x63	; 99
 4e8:	91 05       	cpc	r25, r1
 4ea:	71 f1       	breq	.+92     	; 0x548 <DIO_vTogglePin+0xd8>
 4ec:	2b 81       	ldd	r18, Y+3	; 0x03
 4ee:	3c 81       	ldd	r19, Y+4	; 0x04
 4f0:	24 36       	cpi	r18, 0x64	; 100
 4f2:	31 05       	cpc	r19, r1
 4f4:	e9 f1       	breq	.+122    	; 0x570 <DIO_vTogglePin+0x100>
 4f6:	4f c0       	rjmp	.+158    	; 0x596 <DIO_vTogglePin+0x126>
	case 'A':
	case 'a':
		TOG_BIT(PORTA, pin);
 4f8:	ab e3       	ldi	r26, 0x3B	; 59
 4fa:	b0 e0       	ldi	r27, 0x00	; 0
 4fc:	eb e3       	ldi	r30, 0x3B	; 59
 4fe:	f0 e0       	ldi	r31, 0x00	; 0
 500:	80 81       	ld	r24, Z
 502:	48 2f       	mov	r20, r24
 504:	8a 81       	ldd	r24, Y+2	; 0x02
 506:	28 2f       	mov	r18, r24
 508:	30 e0       	ldi	r19, 0x00	; 0
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	02 2e       	mov	r0, r18
 510:	02 c0       	rjmp	.+4      	; 0x516 <DIO_vTogglePin+0xa6>
 512:	88 0f       	add	r24, r24
 514:	99 1f       	adc	r25, r25
 516:	0a 94       	dec	r0
 518:	e2 f7       	brpl	.-8      	; 0x512 <DIO_vTogglePin+0xa2>
 51a:	84 27       	eor	r24, r20
 51c:	8c 93       	st	X, r24
 51e:	3b c0       	rjmp	.+118    	; 0x596 <DIO_vTogglePin+0x126>
		break;

	case 'B':
	case 'b':
		TOG_BIT(PORTB, pin);
 520:	a8 e3       	ldi	r26, 0x38	; 56
 522:	b0 e0       	ldi	r27, 0x00	; 0
 524:	e8 e3       	ldi	r30, 0x38	; 56
 526:	f0 e0       	ldi	r31, 0x00	; 0
 528:	80 81       	ld	r24, Z
 52a:	48 2f       	mov	r20, r24
 52c:	8a 81       	ldd	r24, Y+2	; 0x02
 52e:	28 2f       	mov	r18, r24
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	02 2e       	mov	r0, r18
 538:	02 c0       	rjmp	.+4      	; 0x53e <DIO_vTogglePin+0xce>
 53a:	88 0f       	add	r24, r24
 53c:	99 1f       	adc	r25, r25
 53e:	0a 94       	dec	r0
 540:	e2 f7       	brpl	.-8      	; 0x53a <DIO_vTogglePin+0xca>
 542:	84 27       	eor	r24, r20
 544:	8c 93       	st	X, r24
 546:	27 c0       	rjmp	.+78     	; 0x596 <DIO_vTogglePin+0x126>
		break;

	case 'C':
	case 'c':
		TOG_BIT(PORTC, pin);
 548:	a5 e3       	ldi	r26, 0x35	; 53
 54a:	b0 e0       	ldi	r27, 0x00	; 0
 54c:	e5 e3       	ldi	r30, 0x35	; 53
 54e:	f0 e0       	ldi	r31, 0x00	; 0
 550:	80 81       	ld	r24, Z
 552:	48 2f       	mov	r20, r24
 554:	8a 81       	ldd	r24, Y+2	; 0x02
 556:	28 2f       	mov	r18, r24
 558:	30 e0       	ldi	r19, 0x00	; 0
 55a:	81 e0       	ldi	r24, 0x01	; 1
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	02 2e       	mov	r0, r18
 560:	02 c0       	rjmp	.+4      	; 0x566 <DIO_vTogglePin+0xf6>
 562:	88 0f       	add	r24, r24
 564:	99 1f       	adc	r25, r25
 566:	0a 94       	dec	r0
 568:	e2 f7       	brpl	.-8      	; 0x562 <DIO_vTogglePin+0xf2>
 56a:	84 27       	eor	r24, r20
 56c:	8c 93       	st	X, r24
 56e:	13 c0       	rjmp	.+38     	; 0x596 <DIO_vTogglePin+0x126>
		break;

	case 'D':
	case 'd':
		TOG_BIT(PORTD, pin);
 570:	a2 e3       	ldi	r26, 0x32	; 50
 572:	b0 e0       	ldi	r27, 0x00	; 0
 574:	e2 e3       	ldi	r30, 0x32	; 50
 576:	f0 e0       	ldi	r31, 0x00	; 0
 578:	80 81       	ld	r24, Z
 57a:	48 2f       	mov	r20, r24
 57c:	8a 81       	ldd	r24, Y+2	; 0x02
 57e:	28 2f       	mov	r18, r24
 580:	30 e0       	ldi	r19, 0x00	; 0
 582:	81 e0       	ldi	r24, 0x01	; 1
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	02 2e       	mov	r0, r18
 588:	02 c0       	rjmp	.+4      	; 0x58e <DIO_vTogglePin+0x11e>
 58a:	88 0f       	add	r24, r24
 58c:	99 1f       	adc	r25, r25
 58e:	0a 94       	dec	r0
 590:	e2 f7       	brpl	.-8      	; 0x58a <DIO_vTogglePin+0x11a>
 592:	84 27       	eor	r24, r20
 594:	8c 93       	st	X, r24
		break;
	}
}
 596:	0f 90       	pop	r0
 598:	0f 90       	pop	r0
 59a:	0f 90       	pop	r0
 59c:	0f 90       	pop	r0
 59e:	cf 91       	pop	r28
 5a0:	df 91       	pop	r29
 5a2:	08 95       	ret

000005a4 <DIO_u8ReadPin>:

unsigned char DIO_u8ReadPin (unsigned char port, unsigned char pin) {
 5a4:	df 93       	push	r29
 5a6:	cf 93       	push	r28
 5a8:	00 d0       	rcall	.+0      	; 0x5aa <DIO_u8ReadPin+0x6>
 5aa:	00 d0       	rcall	.+0      	; 0x5ac <DIO_u8ReadPin+0x8>
 5ac:	0f 92       	push	r0
 5ae:	cd b7       	in	r28, 0x3d	; 61
 5b0:	de b7       	in	r29, 0x3e	; 62
 5b2:	8a 83       	std	Y+2, r24	; 0x02
 5b4:	6b 83       	std	Y+3, r22	; 0x03
	unsigned char value;
	switch (port) {
 5b6:	8a 81       	ldd	r24, Y+2	; 0x02
 5b8:	28 2f       	mov	r18, r24
 5ba:	30 e0       	ldi	r19, 0x00	; 0
 5bc:	3d 83       	std	Y+5, r19	; 0x05
 5be:	2c 83       	std	Y+4, r18	; 0x04
 5c0:	6c 81       	ldd	r22, Y+4	; 0x04
 5c2:	7d 81       	ldd	r23, Y+5	; 0x05
 5c4:	64 34       	cpi	r22, 0x44	; 68
 5c6:	71 05       	cpc	r23, r1
 5c8:	09 f4       	brne	.+2      	; 0x5cc <DIO_u8ReadPin+0x28>
 5ca:	88 c0       	rjmp	.+272    	; 0x6dc <DIO_u8ReadPin+0x138>
 5cc:	8c 81       	ldd	r24, Y+4	; 0x04
 5ce:	9d 81       	ldd	r25, Y+5	; 0x05
 5d0:	85 34       	cpi	r24, 0x45	; 69
 5d2:	91 05       	cpc	r25, r1
 5d4:	94 f4       	brge	.+36     	; 0x5fa <DIO_u8ReadPin+0x56>
 5d6:	2c 81       	ldd	r18, Y+4	; 0x04
 5d8:	3d 81       	ldd	r19, Y+5	; 0x05
 5da:	22 34       	cpi	r18, 0x42	; 66
 5dc:	31 05       	cpc	r19, r1
 5de:	09 f4       	brne	.+2      	; 0x5e2 <DIO_u8ReadPin+0x3e>
 5e0:	45 c0       	rjmp	.+138    	; 0x66c <DIO_u8ReadPin+0xc8>
 5e2:	6c 81       	ldd	r22, Y+4	; 0x04
 5e4:	7d 81       	ldd	r23, Y+5	; 0x05
 5e6:	63 34       	cpi	r22, 0x43	; 67
 5e8:	71 05       	cpc	r23, r1
 5ea:	0c f0       	brlt	.+2      	; 0x5ee <DIO_u8ReadPin+0x4a>
 5ec:	5b c0       	rjmp	.+182    	; 0x6a4 <DIO_u8ReadPin+0x100>
 5ee:	8c 81       	ldd	r24, Y+4	; 0x04
 5f0:	9d 81       	ldd	r25, Y+5	; 0x05
 5f2:	81 34       	cpi	r24, 0x41	; 65
 5f4:	91 05       	cpc	r25, r1
 5f6:	f1 f0       	breq	.+60     	; 0x634 <DIO_u8ReadPin+0x90>
 5f8:	8c c0       	rjmp	.+280    	; 0x712 <DIO_u8ReadPin+0x16e>
 5fa:	2c 81       	ldd	r18, Y+4	; 0x04
 5fc:	3d 81       	ldd	r19, Y+5	; 0x05
 5fe:	22 36       	cpi	r18, 0x62	; 98
 600:	31 05       	cpc	r19, r1
 602:	a1 f1       	breq	.+104    	; 0x66c <DIO_u8ReadPin+0xc8>
 604:	6c 81       	ldd	r22, Y+4	; 0x04
 606:	7d 81       	ldd	r23, Y+5	; 0x05
 608:	63 36       	cpi	r22, 0x63	; 99
 60a:	71 05       	cpc	r23, r1
 60c:	34 f4       	brge	.+12     	; 0x61a <DIO_u8ReadPin+0x76>
 60e:	8c 81       	ldd	r24, Y+4	; 0x04
 610:	9d 81       	ldd	r25, Y+5	; 0x05
 612:	81 36       	cpi	r24, 0x61	; 97
 614:	91 05       	cpc	r25, r1
 616:	71 f0       	breq	.+28     	; 0x634 <DIO_u8ReadPin+0x90>
 618:	7c c0       	rjmp	.+248    	; 0x712 <DIO_u8ReadPin+0x16e>
 61a:	2c 81       	ldd	r18, Y+4	; 0x04
 61c:	3d 81       	ldd	r19, Y+5	; 0x05
 61e:	23 36       	cpi	r18, 0x63	; 99
 620:	31 05       	cpc	r19, r1
 622:	09 f4       	brne	.+2      	; 0x626 <DIO_u8ReadPin+0x82>
 624:	3f c0       	rjmp	.+126    	; 0x6a4 <DIO_u8ReadPin+0x100>
 626:	6c 81       	ldd	r22, Y+4	; 0x04
 628:	7d 81       	ldd	r23, Y+5	; 0x05
 62a:	64 36       	cpi	r22, 0x64	; 100
 62c:	71 05       	cpc	r23, r1
 62e:	09 f4       	brne	.+2      	; 0x632 <DIO_u8ReadPin+0x8e>
 630:	55 c0       	rjmp	.+170    	; 0x6dc <DIO_u8ReadPin+0x138>
 632:	6f c0       	rjmp	.+222    	; 0x712 <DIO_u8ReadPin+0x16e>
	case 'A':
	case 'a':
		value = READ_BIT(PINA, pin);
 634:	e9 e3       	ldi	r30, 0x39	; 57
 636:	f0 e0       	ldi	r31, 0x00	; 0
 638:	40 81       	ld	r20, Z
 63a:	8b 81       	ldd	r24, Y+3	; 0x03
 63c:	28 2f       	mov	r18, r24
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	bc 01       	movw	r22, r24
 646:	02 c0       	rjmp	.+4      	; 0x64c <DIO_u8ReadPin+0xa8>
 648:	66 0f       	add	r22, r22
 64a:	77 1f       	adc	r23, r23
 64c:	2a 95       	dec	r18
 64e:	e2 f7       	brpl	.-8      	; 0x648 <DIO_u8ReadPin+0xa4>
 650:	9b 01       	movw	r18, r22
 652:	8b 81       	ldd	r24, Y+3	; 0x03
 654:	88 2f       	mov	r24, r24
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	b9 01       	movw	r22, r18
 65a:	02 c0       	rjmp	.+4      	; 0x660 <DIO_u8ReadPin+0xbc>
 65c:	76 95       	lsr	r23
 65e:	67 95       	ror	r22
 660:	8a 95       	dec	r24
 662:	e2 f7       	brpl	.-8      	; 0x65c <DIO_u8ReadPin+0xb8>
 664:	cb 01       	movw	r24, r22
 666:	84 23       	and	r24, r20
 668:	89 83       	std	Y+1, r24	; 0x01
 66a:	53 c0       	rjmp	.+166    	; 0x712 <DIO_u8ReadPin+0x16e>
		break;

	case 'B':
	case 'b':
		value = READ_BIT(PINB, pin);
 66c:	e6 e3       	ldi	r30, 0x36	; 54
 66e:	f0 e0       	ldi	r31, 0x00	; 0
 670:	40 81       	ld	r20, Z
 672:	8b 81       	ldd	r24, Y+3	; 0x03
 674:	28 2f       	mov	r18, r24
 676:	30 e0       	ldi	r19, 0x00	; 0
 678:	81 e0       	ldi	r24, 0x01	; 1
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	bc 01       	movw	r22, r24
 67e:	02 c0       	rjmp	.+4      	; 0x684 <DIO_u8ReadPin+0xe0>
 680:	66 0f       	add	r22, r22
 682:	77 1f       	adc	r23, r23
 684:	2a 95       	dec	r18
 686:	e2 f7       	brpl	.-8      	; 0x680 <DIO_u8ReadPin+0xdc>
 688:	9b 01       	movw	r18, r22
 68a:	8b 81       	ldd	r24, Y+3	; 0x03
 68c:	88 2f       	mov	r24, r24
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	b9 01       	movw	r22, r18
 692:	02 c0       	rjmp	.+4      	; 0x698 <DIO_u8ReadPin+0xf4>
 694:	76 95       	lsr	r23
 696:	67 95       	ror	r22
 698:	8a 95       	dec	r24
 69a:	e2 f7       	brpl	.-8      	; 0x694 <DIO_u8ReadPin+0xf0>
 69c:	cb 01       	movw	r24, r22
 69e:	84 23       	and	r24, r20
 6a0:	89 83       	std	Y+1, r24	; 0x01
 6a2:	37 c0       	rjmp	.+110    	; 0x712 <DIO_u8ReadPin+0x16e>
		break;

	case 'C':
	case 'c':
		value = READ_BIT(PINC, pin);
 6a4:	e3 e3       	ldi	r30, 0x33	; 51
 6a6:	f0 e0       	ldi	r31, 0x00	; 0
 6a8:	40 81       	ld	r20, Z
 6aa:	8b 81       	ldd	r24, Y+3	; 0x03
 6ac:	28 2f       	mov	r18, r24
 6ae:	30 e0       	ldi	r19, 0x00	; 0
 6b0:	81 e0       	ldi	r24, 0x01	; 1
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	bc 01       	movw	r22, r24
 6b6:	02 c0       	rjmp	.+4      	; 0x6bc <DIO_u8ReadPin+0x118>
 6b8:	66 0f       	add	r22, r22
 6ba:	77 1f       	adc	r23, r23
 6bc:	2a 95       	dec	r18
 6be:	e2 f7       	brpl	.-8      	; 0x6b8 <DIO_u8ReadPin+0x114>
 6c0:	9b 01       	movw	r18, r22
 6c2:	8b 81       	ldd	r24, Y+3	; 0x03
 6c4:	88 2f       	mov	r24, r24
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	b9 01       	movw	r22, r18
 6ca:	02 c0       	rjmp	.+4      	; 0x6d0 <DIO_u8ReadPin+0x12c>
 6cc:	76 95       	lsr	r23
 6ce:	67 95       	ror	r22
 6d0:	8a 95       	dec	r24
 6d2:	e2 f7       	brpl	.-8      	; 0x6cc <DIO_u8ReadPin+0x128>
 6d4:	cb 01       	movw	r24, r22
 6d6:	84 23       	and	r24, r20
 6d8:	89 83       	std	Y+1, r24	; 0x01
 6da:	1b c0       	rjmp	.+54     	; 0x712 <DIO_u8ReadPin+0x16e>
		break;

	case 'D':
	case 'd':
		value = READ_BIT(PIND, pin);
 6dc:	e0 e3       	ldi	r30, 0x30	; 48
 6de:	f0 e0       	ldi	r31, 0x00	; 0
 6e0:	40 81       	ld	r20, Z
 6e2:	8b 81       	ldd	r24, Y+3	; 0x03
 6e4:	28 2f       	mov	r18, r24
 6e6:	30 e0       	ldi	r19, 0x00	; 0
 6e8:	81 e0       	ldi	r24, 0x01	; 1
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	bc 01       	movw	r22, r24
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <DIO_u8ReadPin+0x150>
 6f0:	66 0f       	add	r22, r22
 6f2:	77 1f       	adc	r23, r23
 6f4:	2a 95       	dec	r18
 6f6:	e2 f7       	brpl	.-8      	; 0x6f0 <DIO_u8ReadPin+0x14c>
 6f8:	9b 01       	movw	r18, r22
 6fa:	8b 81       	ldd	r24, Y+3	; 0x03
 6fc:	88 2f       	mov	r24, r24
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	b9 01       	movw	r22, r18
 702:	02 c0       	rjmp	.+4      	; 0x708 <DIO_u8ReadPin+0x164>
 704:	76 95       	lsr	r23
 706:	67 95       	ror	r22
 708:	8a 95       	dec	r24
 70a:	e2 f7       	brpl	.-8      	; 0x704 <DIO_u8ReadPin+0x160>
 70c:	cb 01       	movw	r24, r22
 70e:	84 23       	and	r24, r20
 710:	89 83       	std	Y+1, r24	; 0x01
		break;
	}
	return value;
 712:	89 81       	ldd	r24, Y+1	; 0x01
}
 714:	0f 90       	pop	r0
 716:	0f 90       	pop	r0
 718:	0f 90       	pop	r0
 71a:	0f 90       	pop	r0
 71c:	0f 90       	pop	r0
 71e:	cf 91       	pop	r28
 720:	df 91       	pop	r29
 722:	08 95       	ret

00000724 <DIO_vEnablePullUp>:

void DIO_vEnablePullUp(unsigned char port, unsigned char pin, unsigned char enable) {
 724:	df 93       	push	r29
 726:	cf 93       	push	r28
 728:	00 d0       	rcall	.+0      	; 0x72a <DIO_vEnablePullUp+0x6>
 72a:	00 d0       	rcall	.+0      	; 0x72c <DIO_vEnablePullUp+0x8>
 72c:	0f 92       	push	r0
 72e:	cd b7       	in	r28, 0x3d	; 61
 730:	de b7       	in	r29, 0x3e	; 62
 732:	89 83       	std	Y+1, r24	; 0x01
 734:	6a 83       	std	Y+2, r22	; 0x02
 736:	4b 83       	std	Y+3, r20	; 0x03
	switch (port) {
 738:	89 81       	ldd	r24, Y+1	; 0x01
 73a:	28 2f       	mov	r18, r24
 73c:	30 e0       	ldi	r19, 0x00	; 0
 73e:	3d 83       	std	Y+5, r19	; 0x05
 740:	2c 83       	std	Y+4, r18	; 0x04
 742:	8c 81       	ldd	r24, Y+4	; 0x04
 744:	9d 81       	ldd	r25, Y+5	; 0x05
 746:	84 34       	cpi	r24, 0x44	; 68
 748:	91 05       	cpc	r25, r1
 74a:	09 f4       	brne	.+2      	; 0x74e <DIO_vEnablePullUp+0x2a>
 74c:	b9 c0       	rjmp	.+370    	; 0x8c0 <__stack+0x61>
 74e:	2c 81       	ldd	r18, Y+4	; 0x04
 750:	3d 81       	ldd	r19, Y+5	; 0x05
 752:	25 34       	cpi	r18, 0x45	; 69
 754:	31 05       	cpc	r19, r1
 756:	94 f4       	brge	.+36     	; 0x77c <DIO_vEnablePullUp+0x58>
 758:	8c 81       	ldd	r24, Y+4	; 0x04
 75a:	9d 81       	ldd	r25, Y+5	; 0x05
 75c:	82 34       	cpi	r24, 0x42	; 66
 75e:	91 05       	cpc	r25, r1
 760:	09 f4       	brne	.+2      	; 0x764 <DIO_vEnablePullUp+0x40>
 762:	56 c0       	rjmp	.+172    	; 0x810 <DIO_vEnablePullUp+0xec>
 764:	2c 81       	ldd	r18, Y+4	; 0x04
 766:	3d 81       	ldd	r19, Y+5	; 0x05
 768:	23 34       	cpi	r18, 0x43	; 67
 76a:	31 05       	cpc	r19, r1
 76c:	0c f0       	brlt	.+2      	; 0x770 <DIO_vEnablePullUp+0x4c>
 76e:	7c c0       	rjmp	.+248    	; 0x868 <__stack+0x9>
 770:	8c 81       	ldd	r24, Y+4	; 0x04
 772:	9d 81       	ldd	r25, Y+5	; 0x05
 774:	81 34       	cpi	r24, 0x41	; 65
 776:	91 05       	cpc	r25, r1
 778:	f9 f0       	breq	.+62     	; 0x7b8 <DIO_vEnablePullUp+0x94>
 77a:	cd c0       	rjmp	.+410    	; 0x916 <__stack+0xb7>
 77c:	2c 81       	ldd	r18, Y+4	; 0x04
 77e:	3d 81       	ldd	r19, Y+5	; 0x05
 780:	22 36       	cpi	r18, 0x62	; 98
 782:	31 05       	cpc	r19, r1
 784:	09 f4       	brne	.+2      	; 0x788 <DIO_vEnablePullUp+0x64>
 786:	44 c0       	rjmp	.+136    	; 0x810 <DIO_vEnablePullUp+0xec>
 788:	8c 81       	ldd	r24, Y+4	; 0x04
 78a:	9d 81       	ldd	r25, Y+5	; 0x05
 78c:	83 36       	cpi	r24, 0x63	; 99
 78e:	91 05       	cpc	r25, r1
 790:	34 f4       	brge	.+12     	; 0x79e <DIO_vEnablePullUp+0x7a>
 792:	2c 81       	ldd	r18, Y+4	; 0x04
 794:	3d 81       	ldd	r19, Y+5	; 0x05
 796:	21 36       	cpi	r18, 0x61	; 97
 798:	31 05       	cpc	r19, r1
 79a:	71 f0       	breq	.+28     	; 0x7b8 <DIO_vEnablePullUp+0x94>
 79c:	bc c0       	rjmp	.+376    	; 0x916 <__stack+0xb7>
 79e:	8c 81       	ldd	r24, Y+4	; 0x04
 7a0:	9d 81       	ldd	r25, Y+5	; 0x05
 7a2:	83 36       	cpi	r24, 0x63	; 99
 7a4:	91 05       	cpc	r25, r1
 7a6:	09 f4       	brne	.+2      	; 0x7aa <DIO_vEnablePullUp+0x86>
 7a8:	5f c0       	rjmp	.+190    	; 0x868 <__stack+0x9>
 7aa:	2c 81       	ldd	r18, Y+4	; 0x04
 7ac:	3d 81       	ldd	r19, Y+5	; 0x05
 7ae:	24 36       	cpi	r18, 0x64	; 100
 7b0:	31 05       	cpc	r19, r1
 7b2:	09 f4       	brne	.+2      	; 0x7b6 <DIO_vEnablePullUp+0x92>
 7b4:	85 c0       	rjmp	.+266    	; 0x8c0 <__stack+0x61>
 7b6:	af c0       	rjmp	.+350    	; 0x916 <__stack+0xb7>
	case 'A':
	case 'a':
		if (enable == 1) {
 7b8:	8b 81       	ldd	r24, Y+3	; 0x03
 7ba:	81 30       	cpi	r24, 0x01	; 1
 7bc:	a1 f4       	brne	.+40     	; 0x7e6 <DIO_vEnablePullUp+0xc2>
			SET_BIT(PORTA, pin);
 7be:	ab e3       	ldi	r26, 0x3B	; 59
 7c0:	b0 e0       	ldi	r27, 0x00	; 0
 7c2:	eb e3       	ldi	r30, 0x3B	; 59
 7c4:	f0 e0       	ldi	r31, 0x00	; 0
 7c6:	80 81       	ld	r24, Z
 7c8:	48 2f       	mov	r20, r24
 7ca:	8a 81       	ldd	r24, Y+2	; 0x02
 7cc:	28 2f       	mov	r18, r24
 7ce:	30 e0       	ldi	r19, 0x00	; 0
 7d0:	81 e0       	ldi	r24, 0x01	; 1
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	02 2e       	mov	r0, r18
 7d6:	02 c0       	rjmp	.+4      	; 0x7dc <DIO_vEnablePullUp+0xb8>
 7d8:	88 0f       	add	r24, r24
 7da:	99 1f       	adc	r25, r25
 7dc:	0a 94       	dec	r0
 7de:	e2 f7       	brpl	.-8      	; 0x7d8 <DIO_vEnablePullUp+0xb4>
 7e0:	84 2b       	or	r24, r20
 7e2:	8c 93       	st	X, r24
 7e4:	98 c0       	rjmp	.+304    	; 0x916 <__stack+0xb7>
		} else {
			CLR_BIT(PORTA, pin);
 7e6:	ab e3       	ldi	r26, 0x3B	; 59
 7e8:	b0 e0       	ldi	r27, 0x00	; 0
 7ea:	eb e3       	ldi	r30, 0x3B	; 59
 7ec:	f0 e0       	ldi	r31, 0x00	; 0
 7ee:	80 81       	ld	r24, Z
 7f0:	48 2f       	mov	r20, r24
 7f2:	8a 81       	ldd	r24, Y+2	; 0x02
 7f4:	28 2f       	mov	r18, r24
 7f6:	30 e0       	ldi	r19, 0x00	; 0
 7f8:	81 e0       	ldi	r24, 0x01	; 1
 7fa:	90 e0       	ldi	r25, 0x00	; 0
 7fc:	02 2e       	mov	r0, r18
 7fe:	02 c0       	rjmp	.+4      	; 0x804 <DIO_vEnablePullUp+0xe0>
 800:	88 0f       	add	r24, r24
 802:	99 1f       	adc	r25, r25
 804:	0a 94       	dec	r0
 806:	e2 f7       	brpl	.-8      	; 0x800 <DIO_vEnablePullUp+0xdc>
 808:	80 95       	com	r24
 80a:	84 23       	and	r24, r20
 80c:	8c 93       	st	X, r24
 80e:	83 c0       	rjmp	.+262    	; 0x916 <__stack+0xb7>
		}
		break;

	case 'B':
	case 'b':
		if (enable == 1) {
 810:	8b 81       	ldd	r24, Y+3	; 0x03
 812:	81 30       	cpi	r24, 0x01	; 1
 814:	a1 f4       	brne	.+40     	; 0x83e <DIO_vEnablePullUp+0x11a>
			SET_BIT(PORTB, pin);
 816:	a8 e3       	ldi	r26, 0x38	; 56
 818:	b0 e0       	ldi	r27, 0x00	; 0
 81a:	e8 e3       	ldi	r30, 0x38	; 56
 81c:	f0 e0       	ldi	r31, 0x00	; 0
 81e:	80 81       	ld	r24, Z
 820:	48 2f       	mov	r20, r24
 822:	8a 81       	ldd	r24, Y+2	; 0x02
 824:	28 2f       	mov	r18, r24
 826:	30 e0       	ldi	r19, 0x00	; 0
 828:	81 e0       	ldi	r24, 0x01	; 1
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	02 2e       	mov	r0, r18
 82e:	02 c0       	rjmp	.+4      	; 0x834 <DIO_vEnablePullUp+0x110>
 830:	88 0f       	add	r24, r24
 832:	99 1f       	adc	r25, r25
 834:	0a 94       	dec	r0
 836:	e2 f7       	brpl	.-8      	; 0x830 <DIO_vEnablePullUp+0x10c>
 838:	84 2b       	or	r24, r20
 83a:	8c 93       	st	X, r24
 83c:	6c c0       	rjmp	.+216    	; 0x916 <__stack+0xb7>
		} else {
			CLR_BIT(PORTB, pin);
 83e:	a8 e3       	ldi	r26, 0x38	; 56
 840:	b0 e0       	ldi	r27, 0x00	; 0
 842:	e8 e3       	ldi	r30, 0x38	; 56
 844:	f0 e0       	ldi	r31, 0x00	; 0
 846:	80 81       	ld	r24, Z
 848:	48 2f       	mov	r20, r24
 84a:	8a 81       	ldd	r24, Y+2	; 0x02
 84c:	28 2f       	mov	r18, r24
 84e:	30 e0       	ldi	r19, 0x00	; 0
 850:	81 e0       	ldi	r24, 0x01	; 1
 852:	90 e0       	ldi	r25, 0x00	; 0
 854:	02 2e       	mov	r0, r18
 856:	02 c0       	rjmp	.+4      	; 0x85c <DIO_vEnablePullUp+0x138>
 858:	88 0f       	add	r24, r24
 85a:	99 1f       	adc	r25, r25
 85c:	0a 94       	dec	r0
 85e:	e2 f7       	brpl	.-8      	; 0x858 <DIO_vEnablePullUp+0x134>
 860:	80 95       	com	r24
 862:	84 23       	and	r24, r20
 864:	8c 93       	st	X, r24
 866:	57 c0       	rjmp	.+174    	; 0x916 <__stack+0xb7>
		}
		break;

	case 'C':
	case 'c':
		if (enable == 1) {
 868:	8b 81       	ldd	r24, Y+3	; 0x03
 86a:	81 30       	cpi	r24, 0x01	; 1
 86c:	a1 f4       	brne	.+40     	; 0x896 <__stack+0x37>
			SET_BIT(PORTC, pin);
 86e:	a5 e3       	ldi	r26, 0x35	; 53
 870:	b0 e0       	ldi	r27, 0x00	; 0
 872:	e5 e3       	ldi	r30, 0x35	; 53
 874:	f0 e0       	ldi	r31, 0x00	; 0
 876:	80 81       	ld	r24, Z
 878:	48 2f       	mov	r20, r24
 87a:	8a 81       	ldd	r24, Y+2	; 0x02
 87c:	28 2f       	mov	r18, r24
 87e:	30 e0       	ldi	r19, 0x00	; 0
 880:	81 e0       	ldi	r24, 0x01	; 1
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	02 2e       	mov	r0, r18
 886:	02 c0       	rjmp	.+4      	; 0x88c <__stack+0x2d>
 888:	88 0f       	add	r24, r24
 88a:	99 1f       	adc	r25, r25
 88c:	0a 94       	dec	r0
 88e:	e2 f7       	brpl	.-8      	; 0x888 <__stack+0x29>
 890:	84 2b       	or	r24, r20
 892:	8c 93       	st	X, r24
 894:	40 c0       	rjmp	.+128    	; 0x916 <__stack+0xb7>
		} else {
			CLR_BIT(PORTC, pin);
 896:	a5 e3       	ldi	r26, 0x35	; 53
 898:	b0 e0       	ldi	r27, 0x00	; 0
 89a:	e5 e3       	ldi	r30, 0x35	; 53
 89c:	f0 e0       	ldi	r31, 0x00	; 0
 89e:	80 81       	ld	r24, Z
 8a0:	48 2f       	mov	r20, r24
 8a2:	8a 81       	ldd	r24, Y+2	; 0x02
 8a4:	28 2f       	mov	r18, r24
 8a6:	30 e0       	ldi	r19, 0x00	; 0
 8a8:	81 e0       	ldi	r24, 0x01	; 1
 8aa:	90 e0       	ldi	r25, 0x00	; 0
 8ac:	02 2e       	mov	r0, r18
 8ae:	02 c0       	rjmp	.+4      	; 0x8b4 <__stack+0x55>
 8b0:	88 0f       	add	r24, r24
 8b2:	99 1f       	adc	r25, r25
 8b4:	0a 94       	dec	r0
 8b6:	e2 f7       	brpl	.-8      	; 0x8b0 <__stack+0x51>
 8b8:	80 95       	com	r24
 8ba:	84 23       	and	r24, r20
 8bc:	8c 93       	st	X, r24
 8be:	2b c0       	rjmp	.+86     	; 0x916 <__stack+0xb7>
		}
		break;

	case 'D':
	case 'd':
		if (enable == 1) {
 8c0:	8b 81       	ldd	r24, Y+3	; 0x03
 8c2:	81 30       	cpi	r24, 0x01	; 1
 8c4:	a1 f4       	brne	.+40     	; 0x8ee <__stack+0x8f>
			SET_BIT(PORTD, pin);
 8c6:	a2 e3       	ldi	r26, 0x32	; 50
 8c8:	b0 e0       	ldi	r27, 0x00	; 0
 8ca:	e2 e3       	ldi	r30, 0x32	; 50
 8cc:	f0 e0       	ldi	r31, 0x00	; 0
 8ce:	80 81       	ld	r24, Z
 8d0:	48 2f       	mov	r20, r24
 8d2:	8a 81       	ldd	r24, Y+2	; 0x02
 8d4:	28 2f       	mov	r18, r24
 8d6:	30 e0       	ldi	r19, 0x00	; 0
 8d8:	81 e0       	ldi	r24, 0x01	; 1
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	02 2e       	mov	r0, r18
 8de:	02 c0       	rjmp	.+4      	; 0x8e4 <__stack+0x85>
 8e0:	88 0f       	add	r24, r24
 8e2:	99 1f       	adc	r25, r25
 8e4:	0a 94       	dec	r0
 8e6:	e2 f7       	brpl	.-8      	; 0x8e0 <__stack+0x81>
 8e8:	84 2b       	or	r24, r20
 8ea:	8c 93       	st	X, r24
 8ec:	14 c0       	rjmp	.+40     	; 0x916 <__stack+0xb7>
		} else {
			CLR_BIT(PORTD, pin);
 8ee:	a2 e3       	ldi	r26, 0x32	; 50
 8f0:	b0 e0       	ldi	r27, 0x00	; 0
 8f2:	e2 e3       	ldi	r30, 0x32	; 50
 8f4:	f0 e0       	ldi	r31, 0x00	; 0
 8f6:	80 81       	ld	r24, Z
 8f8:	48 2f       	mov	r20, r24
 8fa:	8a 81       	ldd	r24, Y+2	; 0x02
 8fc:	28 2f       	mov	r18, r24
 8fe:	30 e0       	ldi	r19, 0x00	; 0
 900:	81 e0       	ldi	r24, 0x01	; 1
 902:	90 e0       	ldi	r25, 0x00	; 0
 904:	02 2e       	mov	r0, r18
 906:	02 c0       	rjmp	.+4      	; 0x90c <__stack+0xad>
 908:	88 0f       	add	r24, r24
 90a:	99 1f       	adc	r25, r25
 90c:	0a 94       	dec	r0
 90e:	e2 f7       	brpl	.-8      	; 0x908 <__stack+0xa9>
 910:	80 95       	com	r24
 912:	84 23       	and	r24, r20
 914:	8c 93       	st	X, r24
		}
		break;
	}
}
 916:	0f 90       	pop	r0
 918:	0f 90       	pop	r0
 91a:	0f 90       	pop	r0
 91c:	0f 90       	pop	r0
 91e:	0f 90       	pop	r0
 920:	cf 91       	pop	r28
 922:	df 91       	pop	r29
 924:	08 95       	ret

00000926 <DIO_vSetPortDir>:

//port level
void DIO_vSetPortDir(unsigned char port, unsigned char dir) {
 926:	df 93       	push	r29
 928:	cf 93       	push	r28
 92a:	00 d0       	rcall	.+0      	; 0x92c <DIO_vSetPortDir+0x6>
 92c:	00 d0       	rcall	.+0      	; 0x92e <DIO_vSetPortDir+0x8>
 92e:	cd b7       	in	r28, 0x3d	; 61
 930:	de b7       	in	r29, 0x3e	; 62
 932:	89 83       	std	Y+1, r24	; 0x01
 934:	6a 83       	std	Y+2, r22	; 0x02
	switch (port) {
 936:	89 81       	ldd	r24, Y+1	; 0x01
 938:	28 2f       	mov	r18, r24
 93a:	30 e0       	ldi	r19, 0x00	; 0
 93c:	3c 83       	std	Y+4, r19	; 0x04
 93e:	2b 83       	std	Y+3, r18	; 0x03
 940:	8b 81       	ldd	r24, Y+3	; 0x03
 942:	9c 81       	ldd	r25, Y+4	; 0x04
 944:	84 34       	cpi	r24, 0x44	; 68
 946:	91 05       	cpc	r25, r1
 948:	09 f4       	brne	.+2      	; 0x94c <DIO_vSetPortDir+0x26>
 94a:	3f c0       	rjmp	.+126    	; 0x9ca <DIO_vSetPortDir+0xa4>
 94c:	2b 81       	ldd	r18, Y+3	; 0x03
 94e:	3c 81       	ldd	r19, Y+4	; 0x04
 950:	25 34       	cpi	r18, 0x45	; 69
 952:	31 05       	cpc	r19, r1
 954:	84 f4       	brge	.+32     	; 0x976 <DIO_vSetPortDir+0x50>
 956:	8b 81       	ldd	r24, Y+3	; 0x03
 958:	9c 81       	ldd	r25, Y+4	; 0x04
 95a:	82 34       	cpi	r24, 0x42	; 66
 95c:	91 05       	cpc	r25, r1
 95e:	59 f1       	breq	.+86     	; 0x9b6 <DIO_vSetPortDir+0x90>
 960:	2b 81       	ldd	r18, Y+3	; 0x03
 962:	3c 81       	ldd	r19, Y+4	; 0x04
 964:	23 34       	cpi	r18, 0x43	; 67
 966:	31 05       	cpc	r19, r1
 968:	5c f5       	brge	.+86     	; 0x9c0 <DIO_vSetPortDir+0x9a>
 96a:	8b 81       	ldd	r24, Y+3	; 0x03
 96c:	9c 81       	ldd	r25, Y+4	; 0x04
 96e:	81 34       	cpi	r24, 0x41	; 65
 970:	91 05       	cpc	r25, r1
 972:	e1 f0       	breq	.+56     	; 0x9ac <DIO_vSetPortDir+0x86>
 974:	2e c0       	rjmp	.+92     	; 0x9d2 <DIO_vSetPortDir+0xac>
 976:	2b 81       	ldd	r18, Y+3	; 0x03
 978:	3c 81       	ldd	r19, Y+4	; 0x04
 97a:	22 36       	cpi	r18, 0x62	; 98
 97c:	31 05       	cpc	r19, r1
 97e:	d9 f0       	breq	.+54     	; 0x9b6 <DIO_vSetPortDir+0x90>
 980:	8b 81       	ldd	r24, Y+3	; 0x03
 982:	9c 81       	ldd	r25, Y+4	; 0x04
 984:	83 36       	cpi	r24, 0x63	; 99
 986:	91 05       	cpc	r25, r1
 988:	34 f4       	brge	.+12     	; 0x996 <DIO_vSetPortDir+0x70>
 98a:	2b 81       	ldd	r18, Y+3	; 0x03
 98c:	3c 81       	ldd	r19, Y+4	; 0x04
 98e:	21 36       	cpi	r18, 0x61	; 97
 990:	31 05       	cpc	r19, r1
 992:	61 f0       	breq	.+24     	; 0x9ac <DIO_vSetPortDir+0x86>
 994:	1e c0       	rjmp	.+60     	; 0x9d2 <DIO_vSetPortDir+0xac>
 996:	8b 81       	ldd	r24, Y+3	; 0x03
 998:	9c 81       	ldd	r25, Y+4	; 0x04
 99a:	83 36       	cpi	r24, 0x63	; 99
 99c:	91 05       	cpc	r25, r1
 99e:	81 f0       	breq	.+32     	; 0x9c0 <DIO_vSetPortDir+0x9a>
 9a0:	2b 81       	ldd	r18, Y+3	; 0x03
 9a2:	3c 81       	ldd	r19, Y+4	; 0x04
 9a4:	24 36       	cpi	r18, 0x64	; 100
 9a6:	31 05       	cpc	r19, r1
 9a8:	81 f0       	breq	.+32     	; 0x9ca <DIO_vSetPortDir+0xa4>
 9aa:	13 c0       	rjmp	.+38     	; 0x9d2 <DIO_vSetPortDir+0xac>
	case 'A':
	case 'a':
		DDRA = dir;
 9ac:	ea e3       	ldi	r30, 0x3A	; 58
 9ae:	f0 e0       	ldi	r31, 0x00	; 0
 9b0:	8a 81       	ldd	r24, Y+2	; 0x02
 9b2:	80 83       	st	Z, r24
 9b4:	0e c0       	rjmp	.+28     	; 0x9d2 <DIO_vSetPortDir+0xac>
		break;

	case 'B':
	case 'b':
		DDRB = dir;
 9b6:	e7 e3       	ldi	r30, 0x37	; 55
 9b8:	f0 e0       	ldi	r31, 0x00	; 0
 9ba:	8a 81       	ldd	r24, Y+2	; 0x02
 9bc:	80 83       	st	Z, r24
 9be:	09 c0       	rjmp	.+18     	; 0x9d2 <DIO_vSetPortDir+0xac>
		break;

	case 'C':
	case 'c':
		DDRC = dir;
 9c0:	e4 e3       	ldi	r30, 0x34	; 52
 9c2:	f0 e0       	ldi	r31, 0x00	; 0
 9c4:	8a 81       	ldd	r24, Y+2	; 0x02
 9c6:	80 83       	st	Z, r24
 9c8:	04 c0       	rjmp	.+8      	; 0x9d2 <DIO_vSetPortDir+0xac>
		break;

	case 'D':
	case 'd':
		DDRD = dir;
 9ca:	e1 e3       	ldi	r30, 0x31	; 49
 9cc:	f0 e0       	ldi	r31, 0x00	; 0
 9ce:	8a 81       	ldd	r24, Y+2	; 0x02
 9d0:	80 83       	st	Z, r24
		break;
	}
}
 9d2:	0f 90       	pop	r0
 9d4:	0f 90       	pop	r0
 9d6:	0f 90       	pop	r0
 9d8:	0f 90       	pop	r0
 9da:	cf 91       	pop	r28
 9dc:	df 91       	pop	r29
 9de:	08 95       	ret

000009e0 <DIO_vWritePort>:

void DIO_vWritePort (unsigned char port, unsigned char value) {
 9e0:	df 93       	push	r29
 9e2:	cf 93       	push	r28
 9e4:	00 d0       	rcall	.+0      	; 0x9e6 <DIO_vWritePort+0x6>
 9e6:	00 d0       	rcall	.+0      	; 0x9e8 <DIO_vWritePort+0x8>
 9e8:	cd b7       	in	r28, 0x3d	; 61
 9ea:	de b7       	in	r29, 0x3e	; 62
 9ec:	89 83       	std	Y+1, r24	; 0x01
 9ee:	6a 83       	std	Y+2, r22	; 0x02
	switch (port) {
 9f0:	89 81       	ldd	r24, Y+1	; 0x01
 9f2:	28 2f       	mov	r18, r24
 9f4:	30 e0       	ldi	r19, 0x00	; 0
 9f6:	3c 83       	std	Y+4, r19	; 0x04
 9f8:	2b 83       	std	Y+3, r18	; 0x03
 9fa:	8b 81       	ldd	r24, Y+3	; 0x03
 9fc:	9c 81       	ldd	r25, Y+4	; 0x04
 9fe:	84 34       	cpi	r24, 0x44	; 68
 a00:	91 05       	cpc	r25, r1
 a02:	09 f4       	brne	.+2      	; 0xa06 <DIO_vWritePort+0x26>
 a04:	3f c0       	rjmp	.+126    	; 0xa84 <DIO_vWritePort+0xa4>
 a06:	2b 81       	ldd	r18, Y+3	; 0x03
 a08:	3c 81       	ldd	r19, Y+4	; 0x04
 a0a:	25 34       	cpi	r18, 0x45	; 69
 a0c:	31 05       	cpc	r19, r1
 a0e:	84 f4       	brge	.+32     	; 0xa30 <DIO_vWritePort+0x50>
 a10:	8b 81       	ldd	r24, Y+3	; 0x03
 a12:	9c 81       	ldd	r25, Y+4	; 0x04
 a14:	82 34       	cpi	r24, 0x42	; 66
 a16:	91 05       	cpc	r25, r1
 a18:	59 f1       	breq	.+86     	; 0xa70 <DIO_vWritePort+0x90>
 a1a:	2b 81       	ldd	r18, Y+3	; 0x03
 a1c:	3c 81       	ldd	r19, Y+4	; 0x04
 a1e:	23 34       	cpi	r18, 0x43	; 67
 a20:	31 05       	cpc	r19, r1
 a22:	5c f5       	brge	.+86     	; 0xa7a <DIO_vWritePort+0x9a>
 a24:	8b 81       	ldd	r24, Y+3	; 0x03
 a26:	9c 81       	ldd	r25, Y+4	; 0x04
 a28:	81 34       	cpi	r24, 0x41	; 65
 a2a:	91 05       	cpc	r25, r1
 a2c:	e1 f0       	breq	.+56     	; 0xa66 <DIO_vWritePort+0x86>
 a2e:	2e c0       	rjmp	.+92     	; 0xa8c <DIO_vWritePort+0xac>
 a30:	2b 81       	ldd	r18, Y+3	; 0x03
 a32:	3c 81       	ldd	r19, Y+4	; 0x04
 a34:	22 36       	cpi	r18, 0x62	; 98
 a36:	31 05       	cpc	r19, r1
 a38:	d9 f0       	breq	.+54     	; 0xa70 <DIO_vWritePort+0x90>
 a3a:	8b 81       	ldd	r24, Y+3	; 0x03
 a3c:	9c 81       	ldd	r25, Y+4	; 0x04
 a3e:	83 36       	cpi	r24, 0x63	; 99
 a40:	91 05       	cpc	r25, r1
 a42:	34 f4       	brge	.+12     	; 0xa50 <DIO_vWritePort+0x70>
 a44:	2b 81       	ldd	r18, Y+3	; 0x03
 a46:	3c 81       	ldd	r19, Y+4	; 0x04
 a48:	21 36       	cpi	r18, 0x61	; 97
 a4a:	31 05       	cpc	r19, r1
 a4c:	61 f0       	breq	.+24     	; 0xa66 <DIO_vWritePort+0x86>
 a4e:	1e c0       	rjmp	.+60     	; 0xa8c <DIO_vWritePort+0xac>
 a50:	8b 81       	ldd	r24, Y+3	; 0x03
 a52:	9c 81       	ldd	r25, Y+4	; 0x04
 a54:	83 36       	cpi	r24, 0x63	; 99
 a56:	91 05       	cpc	r25, r1
 a58:	81 f0       	breq	.+32     	; 0xa7a <DIO_vWritePort+0x9a>
 a5a:	2b 81       	ldd	r18, Y+3	; 0x03
 a5c:	3c 81       	ldd	r19, Y+4	; 0x04
 a5e:	24 36       	cpi	r18, 0x64	; 100
 a60:	31 05       	cpc	r19, r1
 a62:	81 f0       	breq	.+32     	; 0xa84 <DIO_vWritePort+0xa4>
 a64:	13 c0       	rjmp	.+38     	; 0xa8c <DIO_vWritePort+0xac>
	case 'A':
	case 'a':
		PORTA = value;
 a66:	eb e3       	ldi	r30, 0x3B	; 59
 a68:	f0 e0       	ldi	r31, 0x00	; 0
 a6a:	8a 81       	ldd	r24, Y+2	; 0x02
 a6c:	80 83       	st	Z, r24
 a6e:	0e c0       	rjmp	.+28     	; 0xa8c <DIO_vWritePort+0xac>
		break;

	case 'B':
	case 'b':
		PORTB = value;
 a70:	e8 e3       	ldi	r30, 0x38	; 56
 a72:	f0 e0       	ldi	r31, 0x00	; 0
 a74:	8a 81       	ldd	r24, Y+2	; 0x02
 a76:	80 83       	st	Z, r24
 a78:	09 c0       	rjmp	.+18     	; 0xa8c <DIO_vWritePort+0xac>
		break;

	case 'C':
	case 'c':
		PORTC = value;
 a7a:	e5 e3       	ldi	r30, 0x35	; 53
 a7c:	f0 e0       	ldi	r31, 0x00	; 0
 a7e:	8a 81       	ldd	r24, Y+2	; 0x02
 a80:	80 83       	st	Z, r24
 a82:	04 c0       	rjmp	.+8      	; 0xa8c <DIO_vWritePort+0xac>
		break;

	case 'D':
	case 'd':
		PORTD = value;
 a84:	e2 e3       	ldi	r30, 0x32	; 50
 a86:	f0 e0       	ldi	r31, 0x00	; 0
 a88:	8a 81       	ldd	r24, Y+2	; 0x02
 a8a:	80 83       	st	Z, r24
		break;
	}
}
 a8c:	0f 90       	pop	r0
 a8e:	0f 90       	pop	r0
 a90:	0f 90       	pop	r0
 a92:	0f 90       	pop	r0
 a94:	cf 91       	pop	r28
 a96:	df 91       	pop	r29
 a98:	08 95       	ret

00000a9a <DIO_vTogglePort>:

void DIO_vTogglePort(unsigned char port) {
 a9a:	df 93       	push	r29
 a9c:	cf 93       	push	r28
 a9e:	00 d0       	rcall	.+0      	; 0xaa0 <DIO_vTogglePort+0x6>
 aa0:	0f 92       	push	r0
 aa2:	cd b7       	in	r28, 0x3d	; 61
 aa4:	de b7       	in	r29, 0x3e	; 62
 aa6:	89 83       	std	Y+1, r24	; 0x01
	switch (port) {
 aa8:	89 81       	ldd	r24, Y+1	; 0x01
 aaa:	28 2f       	mov	r18, r24
 aac:	30 e0       	ldi	r19, 0x00	; 0
 aae:	3b 83       	std	Y+3, r19	; 0x03
 ab0:	2a 83       	std	Y+2, r18	; 0x02
 ab2:	8a 81       	ldd	r24, Y+2	; 0x02
 ab4:	9b 81       	ldd	r25, Y+3	; 0x03
 ab6:	84 34       	cpi	r24, 0x44	; 68
 ab8:	91 05       	cpc	r25, r1
 aba:	09 f4       	brne	.+2      	; 0xabe <DIO_vTogglePort+0x24>
 abc:	48 c0       	rjmp	.+144    	; 0xb4e <DIO_vTogglePort+0xb4>
 abe:	2a 81       	ldd	r18, Y+2	; 0x02
 ac0:	3b 81       	ldd	r19, Y+3	; 0x03
 ac2:	25 34       	cpi	r18, 0x45	; 69
 ac4:	31 05       	cpc	r19, r1
 ac6:	84 f4       	brge	.+32     	; 0xae8 <DIO_vTogglePort+0x4e>
 ac8:	8a 81       	ldd	r24, Y+2	; 0x02
 aca:	9b 81       	ldd	r25, Y+3	; 0x03
 acc:	82 34       	cpi	r24, 0x42	; 66
 ace:	91 05       	cpc	r25, r1
 ad0:	71 f1       	breq	.+92     	; 0xb2e <DIO_vTogglePort+0x94>
 ad2:	2a 81       	ldd	r18, Y+2	; 0x02
 ad4:	3b 81       	ldd	r19, Y+3	; 0x03
 ad6:	23 34       	cpi	r18, 0x43	; 67
 ad8:	31 05       	cpc	r19, r1
 ada:	8c f5       	brge	.+98     	; 0xb3e <DIO_vTogglePort+0xa4>
 adc:	8a 81       	ldd	r24, Y+2	; 0x02
 ade:	9b 81       	ldd	r25, Y+3	; 0x03
 ae0:	81 34       	cpi	r24, 0x41	; 65
 ae2:	91 05       	cpc	r25, r1
 ae4:	e1 f0       	breq	.+56     	; 0xb1e <DIO_vTogglePort+0x84>
 ae6:	3a c0       	rjmp	.+116    	; 0xb5c <DIO_vTogglePort+0xc2>
 ae8:	2a 81       	ldd	r18, Y+2	; 0x02
 aea:	3b 81       	ldd	r19, Y+3	; 0x03
 aec:	22 36       	cpi	r18, 0x62	; 98
 aee:	31 05       	cpc	r19, r1
 af0:	f1 f0       	breq	.+60     	; 0xb2e <DIO_vTogglePort+0x94>
 af2:	8a 81       	ldd	r24, Y+2	; 0x02
 af4:	9b 81       	ldd	r25, Y+3	; 0x03
 af6:	83 36       	cpi	r24, 0x63	; 99
 af8:	91 05       	cpc	r25, r1
 afa:	34 f4       	brge	.+12     	; 0xb08 <DIO_vTogglePort+0x6e>
 afc:	2a 81       	ldd	r18, Y+2	; 0x02
 afe:	3b 81       	ldd	r19, Y+3	; 0x03
 b00:	21 36       	cpi	r18, 0x61	; 97
 b02:	31 05       	cpc	r19, r1
 b04:	61 f0       	breq	.+24     	; 0xb1e <DIO_vTogglePort+0x84>
 b06:	2a c0       	rjmp	.+84     	; 0xb5c <DIO_vTogglePort+0xc2>
 b08:	8a 81       	ldd	r24, Y+2	; 0x02
 b0a:	9b 81       	ldd	r25, Y+3	; 0x03
 b0c:	83 36       	cpi	r24, 0x63	; 99
 b0e:	91 05       	cpc	r25, r1
 b10:	b1 f0       	breq	.+44     	; 0xb3e <DIO_vTogglePort+0xa4>
 b12:	2a 81       	ldd	r18, Y+2	; 0x02
 b14:	3b 81       	ldd	r19, Y+3	; 0x03
 b16:	24 36       	cpi	r18, 0x64	; 100
 b18:	31 05       	cpc	r19, r1
 b1a:	c9 f0       	breq	.+50     	; 0xb4e <DIO_vTogglePort+0xb4>
 b1c:	1f c0       	rjmp	.+62     	; 0xb5c <DIO_vTogglePort+0xc2>
	case 'A':
	case 'a':
		PORTA =~ PORTA;
 b1e:	ab e3       	ldi	r26, 0x3B	; 59
 b20:	b0 e0       	ldi	r27, 0x00	; 0
 b22:	eb e3       	ldi	r30, 0x3B	; 59
 b24:	f0 e0       	ldi	r31, 0x00	; 0
 b26:	80 81       	ld	r24, Z
 b28:	80 95       	com	r24
 b2a:	8c 93       	st	X, r24
 b2c:	17 c0       	rjmp	.+46     	; 0xb5c <DIO_vTogglePort+0xc2>
		break;

	case 'B':
	case 'b':
		PORTB =~ PORTB;
 b2e:	a8 e3       	ldi	r26, 0x38	; 56
 b30:	b0 e0       	ldi	r27, 0x00	; 0
 b32:	e8 e3       	ldi	r30, 0x38	; 56
 b34:	f0 e0       	ldi	r31, 0x00	; 0
 b36:	80 81       	ld	r24, Z
 b38:	80 95       	com	r24
 b3a:	8c 93       	st	X, r24
 b3c:	0f c0       	rjmp	.+30     	; 0xb5c <DIO_vTogglePort+0xc2>
		break;

	case 'C':
	case 'c':
		PORTC =~ PORTC;
 b3e:	a5 e3       	ldi	r26, 0x35	; 53
 b40:	b0 e0       	ldi	r27, 0x00	; 0
 b42:	e5 e3       	ldi	r30, 0x35	; 53
 b44:	f0 e0       	ldi	r31, 0x00	; 0
 b46:	80 81       	ld	r24, Z
 b48:	80 95       	com	r24
 b4a:	8c 93       	st	X, r24
 b4c:	07 c0       	rjmp	.+14     	; 0xb5c <DIO_vTogglePort+0xc2>
		break;

	case 'D':
	case 'd':
		PORTD =~ PORTD;
 b4e:	a2 e3       	ldi	r26, 0x32	; 50
 b50:	b0 e0       	ldi	r27, 0x00	; 0
 b52:	e2 e3       	ldi	r30, 0x32	; 50
 b54:	f0 e0       	ldi	r31, 0x00	; 0
 b56:	80 81       	ld	r24, Z
 b58:	80 95       	com	r24
 b5a:	8c 93       	st	X, r24
		break;
	}
}
 b5c:	0f 90       	pop	r0
 b5e:	0f 90       	pop	r0
 b60:	0f 90       	pop	r0
 b62:	cf 91       	pop	r28
 b64:	df 91       	pop	r29
 b66:	08 95       	ret

00000b68 <DIO_u8ReadPort>:

unsigned char DIO_u8ReadPort(unsigned char port) {
 b68:	df 93       	push	r29
 b6a:	cf 93       	push	r28
 b6c:	00 d0       	rcall	.+0      	; 0xb6e <DIO_u8ReadPort+0x6>
 b6e:	00 d0       	rcall	.+0      	; 0xb70 <DIO_u8ReadPort+0x8>
 b70:	cd b7       	in	r28, 0x3d	; 61
 b72:	de b7       	in	r29, 0x3e	; 62
 b74:	8a 83       	std	Y+2, r24	; 0x02
	unsigned char value;
	switch (port) {
 b76:	8a 81       	ldd	r24, Y+2	; 0x02
 b78:	28 2f       	mov	r18, r24
 b7a:	30 e0       	ldi	r19, 0x00	; 0
 b7c:	3c 83       	std	Y+4, r19	; 0x04
 b7e:	2b 83       	std	Y+3, r18	; 0x03
 b80:	8b 81       	ldd	r24, Y+3	; 0x03
 b82:	9c 81       	ldd	r25, Y+4	; 0x04
 b84:	84 34       	cpi	r24, 0x44	; 68
 b86:	91 05       	cpc	r25, r1
 b88:	09 f4       	brne	.+2      	; 0xb8c <DIO_u8ReadPort+0x24>
 b8a:	3f c0       	rjmp	.+126    	; 0xc0a <DIO_u8ReadPort+0xa2>
 b8c:	2b 81       	ldd	r18, Y+3	; 0x03
 b8e:	3c 81       	ldd	r19, Y+4	; 0x04
 b90:	25 34       	cpi	r18, 0x45	; 69
 b92:	31 05       	cpc	r19, r1
 b94:	84 f4       	brge	.+32     	; 0xbb6 <DIO_u8ReadPort+0x4e>
 b96:	8b 81       	ldd	r24, Y+3	; 0x03
 b98:	9c 81       	ldd	r25, Y+4	; 0x04
 b9a:	82 34       	cpi	r24, 0x42	; 66
 b9c:	91 05       	cpc	r25, r1
 b9e:	59 f1       	breq	.+86     	; 0xbf6 <DIO_u8ReadPort+0x8e>
 ba0:	2b 81       	ldd	r18, Y+3	; 0x03
 ba2:	3c 81       	ldd	r19, Y+4	; 0x04
 ba4:	23 34       	cpi	r18, 0x43	; 67
 ba6:	31 05       	cpc	r19, r1
 ba8:	5c f5       	brge	.+86     	; 0xc00 <DIO_u8ReadPort+0x98>
 baa:	8b 81       	ldd	r24, Y+3	; 0x03
 bac:	9c 81       	ldd	r25, Y+4	; 0x04
 bae:	81 34       	cpi	r24, 0x41	; 65
 bb0:	91 05       	cpc	r25, r1
 bb2:	e1 f0       	breq	.+56     	; 0xbec <DIO_u8ReadPort+0x84>
 bb4:	2e c0       	rjmp	.+92     	; 0xc12 <DIO_u8ReadPort+0xaa>
 bb6:	2b 81       	ldd	r18, Y+3	; 0x03
 bb8:	3c 81       	ldd	r19, Y+4	; 0x04
 bba:	22 36       	cpi	r18, 0x62	; 98
 bbc:	31 05       	cpc	r19, r1
 bbe:	d9 f0       	breq	.+54     	; 0xbf6 <DIO_u8ReadPort+0x8e>
 bc0:	8b 81       	ldd	r24, Y+3	; 0x03
 bc2:	9c 81       	ldd	r25, Y+4	; 0x04
 bc4:	83 36       	cpi	r24, 0x63	; 99
 bc6:	91 05       	cpc	r25, r1
 bc8:	34 f4       	brge	.+12     	; 0xbd6 <DIO_u8ReadPort+0x6e>
 bca:	2b 81       	ldd	r18, Y+3	; 0x03
 bcc:	3c 81       	ldd	r19, Y+4	; 0x04
 bce:	21 36       	cpi	r18, 0x61	; 97
 bd0:	31 05       	cpc	r19, r1
 bd2:	61 f0       	breq	.+24     	; 0xbec <DIO_u8ReadPort+0x84>
 bd4:	1e c0       	rjmp	.+60     	; 0xc12 <DIO_u8ReadPort+0xaa>
 bd6:	8b 81       	ldd	r24, Y+3	; 0x03
 bd8:	9c 81       	ldd	r25, Y+4	; 0x04
 bda:	83 36       	cpi	r24, 0x63	; 99
 bdc:	91 05       	cpc	r25, r1
 bde:	81 f0       	breq	.+32     	; 0xc00 <DIO_u8ReadPort+0x98>
 be0:	2b 81       	ldd	r18, Y+3	; 0x03
 be2:	3c 81       	ldd	r19, Y+4	; 0x04
 be4:	24 36       	cpi	r18, 0x64	; 100
 be6:	31 05       	cpc	r19, r1
 be8:	81 f0       	breq	.+32     	; 0xc0a <DIO_u8ReadPort+0xa2>
 bea:	13 c0       	rjmp	.+38     	; 0xc12 <DIO_u8ReadPort+0xaa>
	case 'A':
	case 'a':
		value = PINA;
 bec:	e9 e3       	ldi	r30, 0x39	; 57
 bee:	f0 e0       	ldi	r31, 0x00	; 0
 bf0:	80 81       	ld	r24, Z
 bf2:	89 83       	std	Y+1, r24	; 0x01
 bf4:	0e c0       	rjmp	.+28     	; 0xc12 <DIO_u8ReadPort+0xaa>
		break;

	case 'B':
	case 'b':
		value = PINB;
 bf6:	e6 e3       	ldi	r30, 0x36	; 54
 bf8:	f0 e0       	ldi	r31, 0x00	; 0
 bfa:	80 81       	ld	r24, Z
 bfc:	89 83       	std	Y+1, r24	; 0x01
 bfe:	09 c0       	rjmp	.+18     	; 0xc12 <DIO_u8ReadPort+0xaa>
		break;

	case 'C':
	case 'c':
		value = PINC;
 c00:	e3 e3       	ldi	r30, 0x33	; 51
 c02:	f0 e0       	ldi	r31, 0x00	; 0
 c04:	80 81       	ld	r24, Z
 c06:	89 83       	std	Y+1, r24	; 0x01
 c08:	04 c0       	rjmp	.+8      	; 0xc12 <DIO_u8ReadPort+0xaa>
		break;

	case 'D':
	case 'd':
		value = PIND;
 c0a:	e0 e3       	ldi	r30, 0x30	; 48
 c0c:	f0 e0       	ldi	r31, 0x00	; 0
 c0e:	80 81       	ld	r24, Z
 c10:	89 83       	std	Y+1, r24	; 0x01
		break;
	}
	return value;
 c12:	89 81       	ldd	r24, Y+1	; 0x01
}
 c14:	0f 90       	pop	r0
 c16:	0f 90       	pop	r0
 c18:	0f 90       	pop	r0
 c1a:	0f 90       	pop	r0
 c1c:	cf 91       	pop	r28
 c1e:	df 91       	pop	r29
 c20:	08 95       	ret

00000c22 <DIO_vWriteLowNibble>:

void DIO_vWriteLowNibble(unsigned char port, unsigned char value) {
 c22:	df 93       	push	r29
 c24:	cf 93       	push	r28
 c26:	00 d0       	rcall	.+0      	; 0xc28 <DIO_vWriteLowNibble+0x6>
 c28:	00 d0       	rcall	.+0      	; 0xc2a <DIO_vWriteLowNibble+0x8>
 c2a:	cd b7       	in	r28, 0x3d	; 61
 c2c:	de b7       	in	r29, 0x3e	; 62
 c2e:	89 83       	std	Y+1, r24	; 0x01
 c30:	6a 83       	std	Y+2, r22	; 0x02

	value &= 0x0f;
 c32:	8a 81       	ldd	r24, Y+2	; 0x02
 c34:	8f 70       	andi	r24, 0x0F	; 15
 c36:	8a 83       	std	Y+2, r24	; 0x02
	switch(port)
 c38:	89 81       	ldd	r24, Y+1	; 0x01
 c3a:	28 2f       	mov	r18, r24
 c3c:	30 e0       	ldi	r19, 0x00	; 0
 c3e:	3c 83       	std	Y+4, r19	; 0x04
 c40:	2b 83       	std	Y+3, r18	; 0x03
 c42:	8b 81       	ldd	r24, Y+3	; 0x03
 c44:	9c 81       	ldd	r25, Y+4	; 0x04
 c46:	84 34       	cpi	r24, 0x44	; 68
 c48:	91 05       	cpc	r25, r1
 c4a:	09 f4       	brne	.+2      	; 0xc4e <DIO_vWriteLowNibble+0x2c>
 c4c:	61 c0       	rjmp	.+194    	; 0xd10 <DIO_vWriteLowNibble+0xee>
 c4e:	2b 81       	ldd	r18, Y+3	; 0x03
 c50:	3c 81       	ldd	r19, Y+4	; 0x04
 c52:	25 34       	cpi	r18, 0x45	; 69
 c54:	31 05       	cpc	r19, r1
 c56:	8c f4       	brge	.+34     	; 0xc7a <DIO_vWriteLowNibble+0x58>
 c58:	8b 81       	ldd	r24, Y+3	; 0x03
 c5a:	9c 81       	ldd	r25, Y+4	; 0x04
 c5c:	82 34       	cpi	r24, 0x42	; 66
 c5e:	91 05       	cpc	r25, r1
 c60:	b9 f1       	breq	.+110    	; 0xcd0 <DIO_vWriteLowNibble+0xae>
 c62:	2b 81       	ldd	r18, Y+3	; 0x03
 c64:	3c 81       	ldd	r19, Y+4	; 0x04
 c66:	23 34       	cpi	r18, 0x43	; 67
 c68:	31 05       	cpc	r19, r1
 c6a:	0c f0       	brlt	.+2      	; 0xc6e <DIO_vWriteLowNibble+0x4c>
 c6c:	41 c0       	rjmp	.+130    	; 0xcf0 <DIO_vWriteLowNibble+0xce>
 c6e:	8b 81       	ldd	r24, Y+3	; 0x03
 c70:	9c 81       	ldd	r25, Y+4	; 0x04
 c72:	81 34       	cpi	r24, 0x41	; 65
 c74:	91 05       	cpc	r25, r1
 c76:	e1 f0       	breq	.+56     	; 0xcb0 <DIO_vWriteLowNibble+0x8e>
 c78:	5a c0       	rjmp	.+180    	; 0xd2e <DIO_vWriteLowNibble+0x10c>
 c7a:	2b 81       	ldd	r18, Y+3	; 0x03
 c7c:	3c 81       	ldd	r19, Y+4	; 0x04
 c7e:	22 36       	cpi	r18, 0x62	; 98
 c80:	31 05       	cpc	r19, r1
 c82:	31 f1       	breq	.+76     	; 0xcd0 <DIO_vWriteLowNibble+0xae>
 c84:	8b 81       	ldd	r24, Y+3	; 0x03
 c86:	9c 81       	ldd	r25, Y+4	; 0x04
 c88:	83 36       	cpi	r24, 0x63	; 99
 c8a:	91 05       	cpc	r25, r1
 c8c:	34 f4       	brge	.+12     	; 0xc9a <DIO_vWriteLowNibble+0x78>
 c8e:	2b 81       	ldd	r18, Y+3	; 0x03
 c90:	3c 81       	ldd	r19, Y+4	; 0x04
 c92:	21 36       	cpi	r18, 0x61	; 97
 c94:	31 05       	cpc	r19, r1
 c96:	61 f0       	breq	.+24     	; 0xcb0 <DIO_vWriteLowNibble+0x8e>
 c98:	4a c0       	rjmp	.+148    	; 0xd2e <DIO_vWriteLowNibble+0x10c>
 c9a:	8b 81       	ldd	r24, Y+3	; 0x03
 c9c:	9c 81       	ldd	r25, Y+4	; 0x04
 c9e:	83 36       	cpi	r24, 0x63	; 99
 ca0:	91 05       	cpc	r25, r1
 ca2:	31 f1       	breq	.+76     	; 0xcf0 <DIO_vWriteLowNibble+0xce>
 ca4:	2b 81       	ldd	r18, Y+3	; 0x03
 ca6:	3c 81       	ldd	r19, Y+4	; 0x04
 ca8:	24 36       	cpi	r18, 0x64	; 100
 caa:	31 05       	cpc	r19, r1
 cac:	89 f1       	breq	.+98     	; 0xd10 <DIO_vWriteLowNibble+0xee>
 cae:	3f c0       	rjmp	.+126    	; 0xd2e <DIO_vWriteLowNibble+0x10c>
	{
	case 'A':
	case 'a':
		PORTA &= 0xf0;
 cb0:	ab e3       	ldi	r26, 0x3B	; 59
 cb2:	b0 e0       	ldi	r27, 0x00	; 0
 cb4:	eb e3       	ldi	r30, 0x3B	; 59
 cb6:	f0 e0       	ldi	r31, 0x00	; 0
 cb8:	80 81       	ld	r24, Z
 cba:	80 7f       	andi	r24, 0xF0	; 240
 cbc:	8c 93       	st	X, r24
		PORTA |= value;
 cbe:	ab e3       	ldi	r26, 0x3B	; 59
 cc0:	b0 e0       	ldi	r27, 0x00	; 0
 cc2:	eb e3       	ldi	r30, 0x3B	; 59
 cc4:	f0 e0       	ldi	r31, 0x00	; 0
 cc6:	90 81       	ld	r25, Z
 cc8:	8a 81       	ldd	r24, Y+2	; 0x02
 cca:	89 2b       	or	r24, r25
 ccc:	8c 93       	st	X, r24
 cce:	2f c0       	rjmp	.+94     	; 0xd2e <DIO_vWriteLowNibble+0x10c>
		break;

	case 'B':
	case 'b':
		PORTB &= 0xf0;
 cd0:	a8 e3       	ldi	r26, 0x38	; 56
 cd2:	b0 e0       	ldi	r27, 0x00	; 0
 cd4:	e8 e3       	ldi	r30, 0x38	; 56
 cd6:	f0 e0       	ldi	r31, 0x00	; 0
 cd8:	80 81       	ld	r24, Z
 cda:	80 7f       	andi	r24, 0xF0	; 240
 cdc:	8c 93       	st	X, r24
		PORTB |= value;
 cde:	a8 e3       	ldi	r26, 0x38	; 56
 ce0:	b0 e0       	ldi	r27, 0x00	; 0
 ce2:	e8 e3       	ldi	r30, 0x38	; 56
 ce4:	f0 e0       	ldi	r31, 0x00	; 0
 ce6:	90 81       	ld	r25, Z
 ce8:	8a 81       	ldd	r24, Y+2	; 0x02
 cea:	89 2b       	or	r24, r25
 cec:	8c 93       	st	X, r24
 cee:	1f c0       	rjmp	.+62     	; 0xd2e <DIO_vWriteLowNibble+0x10c>
		break;

	case 'C':
	case 'c':
		PORTC &= 0xf0;
 cf0:	a5 e3       	ldi	r26, 0x35	; 53
 cf2:	b0 e0       	ldi	r27, 0x00	; 0
 cf4:	e5 e3       	ldi	r30, 0x35	; 53
 cf6:	f0 e0       	ldi	r31, 0x00	; 0
 cf8:	80 81       	ld	r24, Z
 cfa:	80 7f       	andi	r24, 0xF0	; 240
 cfc:	8c 93       	st	X, r24
		PORTC |= value;
 cfe:	a5 e3       	ldi	r26, 0x35	; 53
 d00:	b0 e0       	ldi	r27, 0x00	; 0
 d02:	e5 e3       	ldi	r30, 0x35	; 53
 d04:	f0 e0       	ldi	r31, 0x00	; 0
 d06:	90 81       	ld	r25, Z
 d08:	8a 81       	ldd	r24, Y+2	; 0x02
 d0a:	89 2b       	or	r24, r25
 d0c:	8c 93       	st	X, r24
 d0e:	0f c0       	rjmp	.+30     	; 0xd2e <DIO_vWriteLowNibble+0x10c>
		break;

	case 'D':
	case 'd':
		PORTD &= 0xf0;
 d10:	a2 e3       	ldi	r26, 0x32	; 50
 d12:	b0 e0       	ldi	r27, 0x00	; 0
 d14:	e2 e3       	ldi	r30, 0x32	; 50
 d16:	f0 e0       	ldi	r31, 0x00	; 0
 d18:	80 81       	ld	r24, Z
 d1a:	80 7f       	andi	r24, 0xF0	; 240
 d1c:	8c 93       	st	X, r24
		PORTD |= value;
 d1e:	a2 e3       	ldi	r26, 0x32	; 50
 d20:	b0 e0       	ldi	r27, 0x00	; 0
 d22:	e2 e3       	ldi	r30, 0x32	; 50
 d24:	f0 e0       	ldi	r31, 0x00	; 0
 d26:	90 81       	ld	r25, Z
 d28:	8a 81       	ldd	r24, Y+2	; 0x02
 d2a:	89 2b       	or	r24, r25
 d2c:	8c 93       	st	X, r24
		break;
	}
}
 d2e:	0f 90       	pop	r0
 d30:	0f 90       	pop	r0
 d32:	0f 90       	pop	r0
 d34:	0f 90       	pop	r0
 d36:	cf 91       	pop	r28
 d38:	df 91       	pop	r29
 d3a:	08 95       	ret

00000d3c <DIO_vWriteHighNibble>:

void DIO_vWriteHighNibble(unsigned char port, unsigned char value) {
 d3c:	df 93       	push	r29
 d3e:	cf 93       	push	r28
 d40:	00 d0       	rcall	.+0      	; 0xd42 <DIO_vWriteHighNibble+0x6>
 d42:	00 d0       	rcall	.+0      	; 0xd44 <DIO_vWriteHighNibble+0x8>
 d44:	cd b7       	in	r28, 0x3d	; 61
 d46:	de b7       	in	r29, 0x3e	; 62
 d48:	89 83       	std	Y+1, r24	; 0x01
 d4a:	6a 83       	std	Y+2, r22	; 0x02

	value <<= 4;
 d4c:	8a 81       	ldd	r24, Y+2	; 0x02
 d4e:	82 95       	swap	r24
 d50:	80 7f       	andi	r24, 0xF0	; 240
 d52:	8a 83       	std	Y+2, r24	; 0x02
	switch(port)
 d54:	89 81       	ldd	r24, Y+1	; 0x01
 d56:	28 2f       	mov	r18, r24
 d58:	30 e0       	ldi	r19, 0x00	; 0
 d5a:	3c 83       	std	Y+4, r19	; 0x04
 d5c:	2b 83       	std	Y+3, r18	; 0x03
 d5e:	8b 81       	ldd	r24, Y+3	; 0x03
 d60:	9c 81       	ldd	r25, Y+4	; 0x04
 d62:	84 34       	cpi	r24, 0x44	; 68
 d64:	91 05       	cpc	r25, r1
 d66:	09 f4       	brne	.+2      	; 0xd6a <DIO_vWriteHighNibble+0x2e>
 d68:	61 c0       	rjmp	.+194    	; 0xe2c <DIO_vWriteHighNibble+0xf0>
 d6a:	2b 81       	ldd	r18, Y+3	; 0x03
 d6c:	3c 81       	ldd	r19, Y+4	; 0x04
 d6e:	25 34       	cpi	r18, 0x45	; 69
 d70:	31 05       	cpc	r19, r1
 d72:	8c f4       	brge	.+34     	; 0xd96 <DIO_vWriteHighNibble+0x5a>
 d74:	8b 81       	ldd	r24, Y+3	; 0x03
 d76:	9c 81       	ldd	r25, Y+4	; 0x04
 d78:	82 34       	cpi	r24, 0x42	; 66
 d7a:	91 05       	cpc	r25, r1
 d7c:	b9 f1       	breq	.+110    	; 0xdec <DIO_vWriteHighNibble+0xb0>
 d7e:	2b 81       	ldd	r18, Y+3	; 0x03
 d80:	3c 81       	ldd	r19, Y+4	; 0x04
 d82:	23 34       	cpi	r18, 0x43	; 67
 d84:	31 05       	cpc	r19, r1
 d86:	0c f0       	brlt	.+2      	; 0xd8a <DIO_vWriteHighNibble+0x4e>
 d88:	41 c0       	rjmp	.+130    	; 0xe0c <DIO_vWriteHighNibble+0xd0>
 d8a:	8b 81       	ldd	r24, Y+3	; 0x03
 d8c:	9c 81       	ldd	r25, Y+4	; 0x04
 d8e:	81 34       	cpi	r24, 0x41	; 65
 d90:	91 05       	cpc	r25, r1
 d92:	e1 f0       	breq	.+56     	; 0xdcc <DIO_vWriteHighNibble+0x90>
 d94:	5a c0       	rjmp	.+180    	; 0xe4a <DIO_vWriteHighNibble+0x10e>
 d96:	2b 81       	ldd	r18, Y+3	; 0x03
 d98:	3c 81       	ldd	r19, Y+4	; 0x04
 d9a:	22 36       	cpi	r18, 0x62	; 98
 d9c:	31 05       	cpc	r19, r1
 d9e:	31 f1       	breq	.+76     	; 0xdec <DIO_vWriteHighNibble+0xb0>
 da0:	8b 81       	ldd	r24, Y+3	; 0x03
 da2:	9c 81       	ldd	r25, Y+4	; 0x04
 da4:	83 36       	cpi	r24, 0x63	; 99
 da6:	91 05       	cpc	r25, r1
 da8:	34 f4       	brge	.+12     	; 0xdb6 <DIO_vWriteHighNibble+0x7a>
 daa:	2b 81       	ldd	r18, Y+3	; 0x03
 dac:	3c 81       	ldd	r19, Y+4	; 0x04
 dae:	21 36       	cpi	r18, 0x61	; 97
 db0:	31 05       	cpc	r19, r1
 db2:	61 f0       	breq	.+24     	; 0xdcc <DIO_vWriteHighNibble+0x90>
 db4:	4a c0       	rjmp	.+148    	; 0xe4a <DIO_vWriteHighNibble+0x10e>
 db6:	8b 81       	ldd	r24, Y+3	; 0x03
 db8:	9c 81       	ldd	r25, Y+4	; 0x04
 dba:	83 36       	cpi	r24, 0x63	; 99
 dbc:	91 05       	cpc	r25, r1
 dbe:	31 f1       	breq	.+76     	; 0xe0c <DIO_vWriteHighNibble+0xd0>
 dc0:	2b 81       	ldd	r18, Y+3	; 0x03
 dc2:	3c 81       	ldd	r19, Y+4	; 0x04
 dc4:	24 36       	cpi	r18, 0x64	; 100
 dc6:	31 05       	cpc	r19, r1
 dc8:	89 f1       	breq	.+98     	; 0xe2c <DIO_vWriteHighNibble+0xf0>
 dca:	3f c0       	rjmp	.+126    	; 0xe4a <DIO_vWriteHighNibble+0x10e>
	{
	case 'A':
	case 'a':
		PORTA &= 0x0f;
 dcc:	ab e3       	ldi	r26, 0x3B	; 59
 dce:	b0 e0       	ldi	r27, 0x00	; 0
 dd0:	eb e3       	ldi	r30, 0x3B	; 59
 dd2:	f0 e0       	ldi	r31, 0x00	; 0
 dd4:	80 81       	ld	r24, Z
 dd6:	8f 70       	andi	r24, 0x0F	; 15
 dd8:	8c 93       	st	X, r24
		PORTA |= value;
 dda:	ab e3       	ldi	r26, 0x3B	; 59
 ddc:	b0 e0       	ldi	r27, 0x00	; 0
 dde:	eb e3       	ldi	r30, 0x3B	; 59
 de0:	f0 e0       	ldi	r31, 0x00	; 0
 de2:	90 81       	ld	r25, Z
 de4:	8a 81       	ldd	r24, Y+2	; 0x02
 de6:	89 2b       	or	r24, r25
 de8:	8c 93       	st	X, r24
 dea:	2f c0       	rjmp	.+94     	; 0xe4a <DIO_vWriteHighNibble+0x10e>
		break;

	case 'B':
	case 'b':
		PORTB &= 0x0f;
 dec:	a8 e3       	ldi	r26, 0x38	; 56
 dee:	b0 e0       	ldi	r27, 0x00	; 0
 df0:	e8 e3       	ldi	r30, 0x38	; 56
 df2:	f0 e0       	ldi	r31, 0x00	; 0
 df4:	80 81       	ld	r24, Z
 df6:	8f 70       	andi	r24, 0x0F	; 15
 df8:	8c 93       	st	X, r24
		PORTB |= value;
 dfa:	a8 e3       	ldi	r26, 0x38	; 56
 dfc:	b0 e0       	ldi	r27, 0x00	; 0
 dfe:	e8 e3       	ldi	r30, 0x38	; 56
 e00:	f0 e0       	ldi	r31, 0x00	; 0
 e02:	90 81       	ld	r25, Z
 e04:	8a 81       	ldd	r24, Y+2	; 0x02
 e06:	89 2b       	or	r24, r25
 e08:	8c 93       	st	X, r24
 e0a:	1f c0       	rjmp	.+62     	; 0xe4a <DIO_vWriteHighNibble+0x10e>
		break;

	case 'C':
	case 'c':
		PORTC &= 0x0f;
 e0c:	a5 e3       	ldi	r26, 0x35	; 53
 e0e:	b0 e0       	ldi	r27, 0x00	; 0
 e10:	e5 e3       	ldi	r30, 0x35	; 53
 e12:	f0 e0       	ldi	r31, 0x00	; 0
 e14:	80 81       	ld	r24, Z
 e16:	8f 70       	andi	r24, 0x0F	; 15
 e18:	8c 93       	st	X, r24
		PORTC |= value;
 e1a:	a5 e3       	ldi	r26, 0x35	; 53
 e1c:	b0 e0       	ldi	r27, 0x00	; 0
 e1e:	e5 e3       	ldi	r30, 0x35	; 53
 e20:	f0 e0       	ldi	r31, 0x00	; 0
 e22:	90 81       	ld	r25, Z
 e24:	8a 81       	ldd	r24, Y+2	; 0x02
 e26:	89 2b       	or	r24, r25
 e28:	8c 93       	st	X, r24
 e2a:	0f c0       	rjmp	.+30     	; 0xe4a <DIO_vWriteHighNibble+0x10e>
		break;

	case 'D':
	case 'd':
		PORTD &= 0x0f;
 e2c:	a2 e3       	ldi	r26, 0x32	; 50
 e2e:	b0 e0       	ldi	r27, 0x00	; 0
 e30:	e2 e3       	ldi	r30, 0x32	; 50
 e32:	f0 e0       	ldi	r31, 0x00	; 0
 e34:	80 81       	ld	r24, Z
 e36:	8f 70       	andi	r24, 0x0F	; 15
 e38:	8c 93       	st	X, r24
		PORTD |= value;
 e3a:	a2 e3       	ldi	r26, 0x32	; 50
 e3c:	b0 e0       	ldi	r27, 0x00	; 0
 e3e:	e2 e3       	ldi	r30, 0x32	; 50
 e40:	f0 e0       	ldi	r31, 0x00	; 0
 e42:	90 81       	ld	r25, Z
 e44:	8a 81       	ldd	r24, Y+2	; 0x02
 e46:	89 2b       	or	r24, r25
 e48:	8c 93       	st	X, r24
		break;
	}
}
 e4a:	0f 90       	pop	r0
 e4c:	0f 90       	pop	r0
 e4e:	0f 90       	pop	r0
 e50:	0f 90       	pop	r0
 e52:	cf 91       	pop	r28
 e54:	df 91       	pop	r29
 e56:	08 95       	ret

00000e58 <EEPROM_vWrite>:
#include <avr/io.h>
#include "std_macros.h"

void EEPROM_vWrite(unsigned short address, unsigned char data) {
 e58:	df 93       	push	r29
 e5a:	cf 93       	push	r28
 e5c:	00 d0       	rcall	.+0      	; 0xe5e <EEPROM_vWrite+0x6>
 e5e:	0f 92       	push	r0
 e60:	cd b7       	in	r28, 0x3d	; 61
 e62:	de b7       	in	r29, 0x3e	; 62
 e64:	9a 83       	std	Y+2, r25	; 0x02
 e66:	89 83       	std	Y+1, r24	; 0x01
 e68:	6b 83       	std	Y+3, r22	; 0x03
	EEARL=(char)address;
 e6a:	ee e3       	ldi	r30, 0x3E	; 62
 e6c:	f0 e0       	ldi	r31, 0x00	; 0
 e6e:	89 81       	ldd	r24, Y+1	; 0x01
 e70:	80 83       	st	Z, r24
	EEARH=(char)(address>>8);
 e72:	ef e3       	ldi	r30, 0x3F	; 63
 e74:	f0 e0       	ldi	r31, 0x00	; 0
 e76:	89 81       	ldd	r24, Y+1	; 0x01
 e78:	9a 81       	ldd	r25, Y+2	; 0x02
 e7a:	89 2f       	mov	r24, r25
 e7c:	99 27       	eor	r25, r25
 e7e:	80 83       	st	Z, r24
	EEDR = data;
 e80:	ed e3       	ldi	r30, 0x3D	; 61
 e82:	f0 e0       	ldi	r31, 0x00	; 0
 e84:	8b 81       	ldd	r24, Y+3	; 0x03
 e86:	80 83       	st	Z, r24
	SET_BIT(EECR, EEMWE);
 e88:	ac e3       	ldi	r26, 0x3C	; 60
 e8a:	b0 e0       	ldi	r27, 0x00	; 0
 e8c:	ec e3       	ldi	r30, 0x3C	; 60
 e8e:	f0 e0       	ldi	r31, 0x00	; 0
 e90:	80 81       	ld	r24, Z
 e92:	84 60       	ori	r24, 0x04	; 4
 e94:	8c 93       	st	X, r24
	SET_BIT(EECR, EEWE);
 e96:	ac e3       	ldi	r26, 0x3C	; 60
 e98:	b0 e0       	ldi	r27, 0x00	; 0
 e9a:	ec e3       	ldi	r30, 0x3C	; 60
 e9c:	f0 e0       	ldi	r31, 0x00	; 0
 e9e:	80 81       	ld	r24, Z
 ea0:	82 60       	ori	r24, 0x02	; 2
 ea2:	8c 93       	st	X, r24
	while (READ_BIT(EECR, EEWE) == 1);
 ea4:	ec e3       	ldi	r30, 0x3C	; 60
 ea6:	f0 e0       	ldi	r31, 0x00	; 0
 ea8:	80 81       	ld	r24, Z
 eaa:	88 2f       	mov	r24, r24
 eac:	90 e0       	ldi	r25, 0x00	; 0
 eae:	81 70       	andi	r24, 0x01	; 1
 eb0:	90 70       	andi	r25, 0x00	; 0
 eb2:	88 23       	and	r24, r24
 eb4:	b9 f7       	brne	.-18     	; 0xea4 <EEPROM_vWrite+0x4c>
}
 eb6:	0f 90       	pop	r0
 eb8:	0f 90       	pop	r0
 eba:	0f 90       	pop	r0
 ebc:	cf 91       	pop	r28
 ebe:	df 91       	pop	r29
 ec0:	08 95       	ret

00000ec2 <EEPROM_u8Read>:

unsigned char EEPROM_u8Read(unsigned short address) {
 ec2:	df 93       	push	r29
 ec4:	cf 93       	push	r28
 ec6:	00 d0       	rcall	.+0      	; 0xec8 <EEPROM_u8Read+0x6>
 ec8:	cd b7       	in	r28, 0x3d	; 61
 eca:	de b7       	in	r29, 0x3e	; 62
 ecc:	9a 83       	std	Y+2, r25	; 0x02
 ece:	89 83       	std	Y+1, r24	; 0x01
	EEAR = address;
 ed0:	ee e3       	ldi	r30, 0x3E	; 62
 ed2:	f0 e0       	ldi	r31, 0x00	; 0
 ed4:	89 81       	ldd	r24, Y+1	; 0x01
 ed6:	9a 81       	ldd	r25, Y+2	; 0x02
 ed8:	91 83       	std	Z+1, r25	; 0x01
 eda:	80 83       	st	Z, r24
	SET_BIT(EECR, EERE);
 edc:	ac e3       	ldi	r26, 0x3C	; 60
 ede:	b0 e0       	ldi	r27, 0x00	; 0
 ee0:	ec e3       	ldi	r30, 0x3C	; 60
 ee2:	f0 e0       	ldi	r31, 0x00	; 0
 ee4:	80 81       	ld	r24, Z
 ee6:	81 60       	ori	r24, 0x01	; 1
 ee8:	8c 93       	st	X, r24
	return EEDR;
 eea:	ed e3       	ldi	r30, 0x3D	; 61
 eec:	f0 e0       	ldi	r31, 0x00	; 0
 eee:	80 81       	ld	r24, Z
}
 ef0:	0f 90       	pop	r0
 ef2:	0f 90       	pop	r0
 ef4:	cf 91       	pop	r28
 ef6:	df 91       	pop	r29
 ef8:	08 95       	ret

00000efa <main>:

#include "EEPROM.h"
int main(void)
{
 efa:	df 93       	push	r29
 efc:	cf 93       	push	r28
 efe:	cd b7       	in	r28, 0x3d	; 61
 f00:	de b7       	in	r29, 0x3e	; 62

	EEPROM_vWrite(0x0030,0X50);
 f02:	80 e3       	ldi	r24, 0x30	; 48
 f04:	90 e0       	ldi	r25, 0x00	; 0
 f06:	60 e5       	ldi	r22, 0x50	; 80
 f08:	0e 94 2c 07 	call	0xe58	; 0xe58 <EEPROM_vWrite>
 f0c:	ff cf       	rjmp	.-2      	; 0xf0c <main+0x12>

00000f0e <_exit>:
 f0e:	f8 94       	cli

00000f10 <__stop_program>:
 f10:	ff cf       	rjmp	.-2      	; 0xf10 <__stop_program>
